<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[adev.cn]]></title>
  <link href="http://irubi.github.io/atom.xml" rel="self"/>
  <link href="http://irubi.github.io/"/>
  <updated>2015-10-30T21:43:10+08:00</updated>
  <id>http://irubi.github.io/</id>
  <author>
    <name><![CDATA[李骥平]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[重新部署octopress blog]]></title>
    <link href="http://irubi.github.io/blog/2015/10/30/zhong-xin-bu-shu-octopress-blog/"/>
    <updated>2015-10-30T21:25:00+08:00</updated>
    <id>http://irubi.github.io/blog/2015/10/30/zhong-xin-bu-shu-octopress-blog</id>
    <content type="html"><![CDATA[<blockquote>
  <p>文档地址：<a href="http://octopress.org/docs">http://octopress.org/docs</a></p>
</blockquote>

<ul>
  <li>从github clone项目文件, 切换到<code>source</code>分支</li>
  <li>安装<code>.ruby-version</code>中记录的ruby版本，或修改<code>.ruby-version</code>为当前系统的ruby版本
<!--more--></li>
  <li>命令及说明</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">bundle</span>
</span><span class="line"><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="n">new_post</span>
</span><span class="line"><span class="c1">#Enter a title for your post:  title 生成新的文章</span>
</span><span class="line"><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="n">generate</span> <span class="c1">#build </span>
</span><span class="line"><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="n">deploy</span> <span class="c1">#部署</span>
</span><span class="line"><span class="c1">#用pow随时查看blog，但是每次写了新文章需要 执行 bundle exec rake generate</span>
</span><span class="line"><span class="n">cd</span> <span class="o">~</span><span class="sr">/.pow</span>
</span><span class="line"><span class="sr">ln -s /</span><span class="n">path</span><span class="o">/</span><span class="n">to</span><span class="o">/</span><span class="n">blog</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails操作Access数据库(mdb)]]></title>
    <link href="http://irubi.github.io/blog/2014/02/13/railscao-zuo-accessshu-ju-ku-mdb/"/>
    <updated>2014-02-13T15:25:00+08:00</updated>
    <id>http://irubi.github.io/blog/2014/02/13/railscao-zuo-accessshu-ju-ku-mdb</id>
    <content type="html"><![CDATA[<p>应用场景：</p>

<ul>
  <li>
    <p><code>windows</code>上跑着一个短信猫的服务，这个程序二次开发是通过修改服务所使用的一个<code>access</code>数据库，插入记录即可实现发短信的功能。</p>
  </li>
  <li>
    <p><code>linux上</code>是<code>Rails</code>程序，开发了一个通讯录和发短信的功能，发短信时需要在<code>create</code>短信之后触发修改<code>access</code>数据库的操作。</p>
  </li>
</ul>

<p>但是<code>Rails</code>连接<code>windows</code>下的<code>access</code>(mdb数据库)比较麻烦，需要调用<code>mdb-tools</code>之类的东西，而且对中文支持可能会出现问题。</p>

<p>所以思路是这样的，在<code>windows</code>上安装<code>ssh server</code>，用<code>freesshd.exe</code>(开源免费)。安装好之后建立一个<code>ssh</code>用户(如root),并且将<code>linux</code>服务器上的<code>ssh\id_rsa.pub</code>内容复制到<code>c:/freesshd/root</code>文件中，如果还要加入其他ssh（root）用户，也可以将<code>id_rsa.pub</code>内容复制进去。</p>

<p>建立<code>ssh</code>通道之后，就可以用<code>ruby</code>执行<code>ssh</code>远程命令来操纵<code>windows</code>来执行命令操作<code>access</code>数据库。在<code>windows</code>上建立脚本如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>insertsms.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="c1">#!/usr/bin/env ruby</span>
</span><span class="line">  <span class="c1"># encoding: utf-8</span>
</span><span class="line">  <span class="nb">require</span> <span class="s1">&#39;rubygems&#39;</span>
</span><span class="line">  <span class="nb">require</span> <span class="s1">&#39;sequel&#39;</span>
</span><span class="line">  <span class="nb">require</span> <span class="s2">&quot;net/http&quot;</span>
</span><span class="line">  <span class="nb">require</span> <span class="s2">&quot;uri&quot;</span>
</span><span class="line">  <span class="nb">require</span> <span class="s1">&#39;json&#39;</span>
</span><span class="line">
</span><span class="line">  <span class="n">uri</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">)</span>
</span><span class="line">  <span class="n">response</span> <span class="o">=</span> <span class="no">JSON</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="ss">Net</span><span class="p">:</span><span class="ss">:HTTP</span><span class="o">.</span><span class="n">get_response</span><span class="p">(</span><span class="n">uri</span><span class="p">)</span><span class="o">.</span><span class="n">body</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">  <span class="nb">puts</span> <span class="n">uri</span>
</span><span class="line">  <span class="no">DB</span> <span class="o">=</span> <span class="no">Sequel</span><span class="o">.</span><span class="n">ado</span><span class="p">(</span><span class="ss">:conn_string</span><span class="o">=&gt;</span><span class="s1">&#39;Provider=Microsoft.Jet.OLEDB.4.0;Data Source=D:\website\db\smsdata.mdb&#39;</span><span class="p">)</span>
</span><span class="line">  <span class="n">items</span> <span class="o">=</span> <span class="no">DB</span><span class="o">[</span><span class="ss">:OutBox</span><span class="o">]</span>
</span><span class="line">
</span><span class="line">  <span class="n">phones</span> <span class="o">=</span> <span class="n">response</span><span class="o">[</span><span class="s2">&quot;phones&quot;</span><span class="o">].</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">)</span>
</span><span class="line">  <span class="n">msg</span> <span class="o">=</span> <span class="n">response</span><span class="o">[</span><span class="s2">&quot;msg&quot;</span><span class="o">].</span><span class="n">dup</span><span class="o">.</span><span class="n">force_encoding</span><span class="p">(</span><span class="s2">&quot;utf-8&quot;</span><span class="p">)</span>
</span><span class="line">  <span class="n">sent_at</span> <span class="o">=</span> <span class="n">response</span><span class="o">[</span><span class="s2">&quot;sent_at&quot;</span><span class="o">]</span>
</span><span class="line">
</span><span class="line">  <span class="n">phones</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span><span class="o">|</span><span class="n">phone</span><span class="o">|</span>
</span><span class="line">    <span class="n">items</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="ss">:Mbno</span> <span class="o">=&gt;</span> <span class="n">phone</span><span class="p">,</span> <span class="ss">:Msg</span> <span class="o">=&gt;</span> <span class="n">msg</span><span class="p">,</span> <span class="ss">:SendTime</span> <span class="o">=&gt;</span> <span class="n">sent_at</span><span class="p">)</span>
</span><span class="line">  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>linux服务器 Rails程序：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>model/sms.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">  <span class="c1">#!/usr/bin/env ruby</span>
</span><span class="line">  <span class="nb">require</span> <span class="s1">&#39;rubygems&#39;</span>
</span><span class="line">  <span class="nb">require</span> <span class="s1">&#39;net/ssh&#39;</span>
</span><span class="line">
</span><span class="line">  <span class="k">class</span> <span class="nc">Sms</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">as_json</span><span class="p">(</span><span class="n">options</span><span class="o">=</span><span class="p">{})</span>
</span><span class="line">      <span class="p">{</span> <span class="ss">:id</span> <span class="o">=&gt;</span> <span class="nb">self</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="ss">:phones</span> <span class="o">=&gt;</span> <span class="nb">self</span><span class="o">.</span><span class="n">contact</span><span class="p">,</span> <span class="ss">:msg</span> <span class="o">=&gt;</span> <span class="nb">self</span><span class="o">.</span><span class="n">content</span><span class="p">,</span> <span class="ss">:sent_at</span> <span class="o">=&gt;</span> <span class="nb">self</span><span class="o">.</span><span class="n">sent_at</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%Y/%m/%d %H:%M:%S&quot;</span><span class="p">)</span> <span class="p">}</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">send_msg</span>
</span><span class="line">      <span class="n">host</span> <span class="o">=</span> <span class="s1">&#39;192.192.100.11&#39;</span>
</span><span class="line">      <span class="n">user</span> <span class="o">=</span> <span class="s1">&#39;root&#39;</span>
</span><span class="line">      <span class="n">sms_json_url</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span><span class="line">      <span class="k">if</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span> <span class="o">==</span> <span class="s1">&#39;development&#39;</span>
</span><span class="line">        <span class="n">sms_json_url</span> <span class="o">=</span> <span class="s1">&#39;http://192.192.102.97:3000&#39;</span> <span class="o">+</span> <span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">url_helpers</span><span class="o">.</span><span class="n">admin_sms_path</span><span class="p">(</span><span class="nb">self</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;.json&#39;</span>
</span><span class="line">      <span class="k">elsif</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span> <span class="o">==</span> <span class="s1">&#39;production&#39;</span>
</span><span class="line">        <span class="n">sms_json_url</span> <span class="o">=</span> <span class="s1">&#39;http://192.192.100.22&#39;</span> <span class="o">+</span> <span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">url_helpers</span><span class="o">.</span><span class="n">admin_sms_path</span><span class="p">(</span><span class="nb">self</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;.json&#39;</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">
</span><span class="line">      <span class="ss">Net</span><span class="p">:</span><span class="ss">:SSH</span><span class="o">.</span><span class="n">start</span><span class="p">(</span> <span class="n">host</span><span class="p">,</span> <span class="n">user</span><span class="p">)</span> <span class="k">do</span><span class="o">|</span><span class="n">ssh</span><span class="o">|</span>
</span><span class="line">        <span class="n">ssh</span><span class="o">.</span><span class="n">exec!</span><span class="p">(</span><span class="s2">&quot;cmd /c c:/ruby200/bin/ruby d:/website/insertsms.rb </span><span class="se">\&quot;</span><span class="si">#{</span><span class="n">sms_json_url</span><span class="si">}</span><span class="se">\&quot;</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>因为如果从<code>Rails</code>调用<code>windows</code>上的<code>insertsms.rb</code>这段<code>script</code>如果传中文参数时，会有乱码问题出现，所以将插入短信所需数据参数以<code>json</code>的方式提供，直接让<code>insertsms.rb</code>去读取，将数据处理之后插入<code>access</code>数据库即可。</p>

<p>通信过程可能会耗费时间，造成响应时间长，所以需要引入<code>delay_job</code>来提升用户体验。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[内网windows server部署rails应用]]></title>
    <link href="http://irubi.github.io/blog/2013/12/24/nei-wang-windows-serverbu-shu-railsying-yong/"/>
    <updated>2013-12-24T09:14:00+08:00</updated>
    <id>http://irubi.github.io/blog/2013/12/24/nei-wang-windows-serverbu-shu-railsying-yong</id>
    <content type="html"><![CDATA[<p>最近在做医院的项目，是一个部署到内网的OA系统
内网服务器用的是<code>windows server 2003</code>, 没有外网连接</p>

<p>开发上没有什么大问题，用<code>rails 4.0</code>开发完成之后，困难的是部署。
部署时候因为考虑到<code>windows</code>对<code>ROR</code>的不友好，所以利用<code>vmware server 2.0.2</code>制作虚拟机来实现。</p>

<p>找一台可以上网的<code>windows</code>电脑，安装<code>vmware server 2.0.2</code>, <code>Linux</code>我比较顺手的是<code>centos</code>和<code>ubuntu</code>，因为这个版本的<code>vmware server</code>支持<code>ubuntu</code>的最高版本是8.04, 再往后的版本在安装时会卡住，安装无法继续。所以我选择了<code>centos</code>桌面版，因为还考虑到桌面版在设置（网络配置等）方面比较便捷。</p>

<p>装好之后配置<code>vmware</code>网络连接方式为桥接（并设置好固定IP），这样的设置可以将虚拟机作为内网中的一台可通过固定IP访问的服务器。</p>

<p>接下来就是安装<code>ssh</code>, 这样就可以在<code>mac</code>上访问虚拟服务器进行各种操作了。
<code>git</code>, <code>rvm</code>, <code>mysql</code>, <code>passenger</code>, <code>nginx</code>…</p>

<p>这里有一个好的建议是在虚拟服务器上安装<code>gitolite</code>服务（配置什么的比<code>gitosis</code>更简单），到时候可以直接把代码<code>push</code>到服务器上，从服务器上部署代码。</p>

<p>因为现在都是在有网络的宿主<code>windows</code>电脑上操作，所以可以将需要的<code>gem</code>都安装完全，直至<code>rails</code>应用可以在虚拟服务器上跑起来。</p>

<p>跑起来之后将<code>vmware</code>文件夹拷贝到服务器上，在服务器上安装好<code>vmware server</code>后直接将虚拟服务器导入，修改网络配置，就ok了！</p>

<p>接下来在运行过程中可能出现的问题：</p>

<ol>
  <li>
    <p>配置vmware server自动启动，centos随vmware server 自启动。</p>

    <p>在Configure Options里有Edit Virtual Machine Startup/Shutdown，点击一下，出来自启动的控制面板，将Allow virtual machines to start and stop automatically with the system勾选中，然后最下面有Startup Order, 将需要启动的虚拟机Move up到Specified Order下。
 重启一下测试启动是否正常。</p>
  </li>
  <li>
    <p>mysql可能在重启centos虚拟机（非正常reboot）时不删除/var/lib/mysql/mysql.sock导致开机后mysql启动失败，解决方案：</p>
  </li>
</ol>

<p>vmware server非正常关机时不会删除/var/lib/mysql/mysql.sock文件，导致开机后mysql启动失败，解决方案：</p>

<pre><code>[root@master ~]#  vi /etc/init.d/mysqld


start(){
  ...
  # Check and delete mysql.sock
  if [ -x /var/lib/mysql/mysql.sock ]; then
    rm -f /var/lib/mysql/mysql.sock
  fi
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mac上查找已记忆的wifi密码]]></title>
    <link href="http://irubi.github.io/blog/2013/08/16/macshang-cha-zhao-yi-ji-yi-de-wifimi-ma/"/>
    <updated>2013-08-16T21:18:00+08:00</updated>
    <id>http://irubi.github.io/blog/2013/08/16/macshang-cha-zhao-yi-ji-yi-de-wifimi-ma</id>
    <content type="html"><![CDATA[<p>看图就明白：</p>

<p><img class="center" src="http://pic.yupoo.com/irubi_v/DrmWnFTj/NbK6k.png" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Insert syntax highlight code into keynote]]></title>
    <link href="http://irubi.github.io/blog/2013/05/16/insert-syntax-highlight-code-into-keynote/"/>
    <updated>2013-05-16T10:43:00+08:00</updated>
    <id>http://irubi.github.io/blog/2013/05/16/insert-syntax-highlight-code-into-keynote</id>
    <content type="html"><![CDATA[<p>为了做一个更加漂亮的技术类<code>keynote</code>，经常需要粘贴代码进去，但是一般情况下复制粘贴之后的代码会变成一段<code>plain text</code>,看起来特别不专业。
<!--more--></p>

<p>这个问题解决思路是将一段代码<code>copy as rtf</code>，如果你去搜索的话，可以很快得到两种解决方案。
下面是在<code>sublime IDE</code>上实现的，首先<code>cmd +shift +p</code>输入<code>install</code>选择<code>install package</code>，在建立完索引之后输入<code>highlight</code>,这是一个<code>sublime</code>的<code>package</code>，安装。这个package是通过Pygments来实现将代码语法进行高亮显示转化的。</p>

<p><img class="center" src="http://pic.yupoo.com/irubi_v/CRLGlbvs/LzVJ2.png" /></p>

<p>安装好之后可以在<code>Preferences &gt; Package Settings &gt; SublimeHighlight &gt; Settings - User</code>文件里定义<code>Pygments</code>的主题:</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="yaml"><span class="line"><span class="p-Indicator">{</span>
</span><span class="line">    <span class="s">&quot;theme&quot;</span><span class="p-Indicator">:</span> <span class="s">&quot;monokai&quot;</span><span class="p-Indicator">,</span>
</span><span class="line">    <span class="s">&quot;linenos&quot;</span><span class="p-Indicator">:</span> <span class="s">&quot;inline&quot;</span><span class="p-Indicator">,</span>
</span><span class="line">    <span class="s">&quot;noclasses&quot;</span><span class="p-Indicator">:</span> <span class="nv">true</span><span class="p-Indicator">,</span>
</span><span class="line">    <span class="s">&quot;fontface&quot;</span><span class="p-Indicator">:</span> <span class="s">&quot;Menlo&quot;</span>
</span><span class="line"><span class="p-Indicator">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这里选取主题的意义在于对不同的Keynote背景，可能代码高亮之后显示效果不是很好，通过主题的定义可以更适应Keynote的背景色。
可选的主题包括：</p>

<p><code>autumn</code>
<code>borland</code>
<code>bw</code>
<code>colorful</code>
<code>default</code>
<code>emacs</code>
<code>friendly</code>
<code>fruity</code>
<code>manni</code>
<code>monokai</code>
<code>murphy</code>
<code>native</code>
<code>pastie</code>
<code>perldoc</code>
<code>rrt</code>
<code>tango</code>
<code>trac</code>
<code>vim</code>
<code>vs</code></p>

<p>可以通过<a href="http://genshi.edgewall.org/prefs/pygments">GENSHI</a>这个网站来查看不同theme的样式。</p>

<p>其他的几个设置<code>key</code>的设置可以参考<a href="https://github.com/n1k0/SublimeHighlight">文档</a></p>

<p>再来定义一下复制到系统剪切板的快捷键, <code>Preferences &gt; Key bindings - User</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="yaml"><span class="line"><span class="p-Indicator">[</span>
</span><span class="line">    <span class="p-Indicator">{</span> <span class="s">&quot;keys&quot;</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="s">&quot;super+shift+c&quot;</span><span class="p-Indicator">],</span> <span class="s">&quot;command&quot;</span><span class="p-Indicator">:</span> <span class="s">&quot;sublime_highlight&quot;</span><span class="p-Indicator">,</span> <span class="s">&quot;args&quot;</span><span class="p-Indicator">:</span> <span class="p-Indicator">{</span> <span class="s">&quot;target&quot;</span><span class="p-Indicator">:</span> <span class="s">&quot;clipboard&quot;</span><span class="p-Indicator">,</span> <span class="s">&quot;output_type&quot;</span><span class="p-Indicator">:</span> <span class="s">&quot;rtf&quot;</span><span class="p-Indicator">}}</span>
</span><span class="line"><span class="p-Indicator">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>定义之后可以通过<code>cmd</code> + <code>shift</code> + <code>c</code>来将选中的代码以<code>rtf</code>的格式复制到剪切板中了。</p>

<p>效果如下：</p>

<p><img class="center" src="http://pic.yupoo.com/irubi_v/CRLFvm4m/10eBK3.png" /></p>

<p>然后可以通过调整字体的大小来做进一步的美化工作。</p>

<p>当然复制到系统剪切板的内容也可以复制到其他的文字处理软件中，譬如<code>pages</code>,<code>word</code>,<code>ppt</code>等..</p>

<p>如果是用<code>textmate</code>的话，<code>textmate</code>有一个<a href="https://github.com/drnic/copy-as-rtf-tmbundle"><code>copy as rtf</code></a>的<code>bundle</code>，可以按照<code>github</code>上面给出的说明来安装和使用。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mac上面如何解决itunes乱码的问题]]></title>
    <link href="http://irubi.github.io/blog/2013/03/04/macshang-mian-ru-he-jie-jue-itunesluan-ma-de-wen-ti/"/>
    <updated>2013-03-04T09:25:00+08:00</updated>
    <id>http://irubi.github.io/blog/2013/03/04/macshang-mian-ru-he-jie-jue-itunesluan-ma-de-wen-ti</id>
    <content type="html"><![CDATA[<p>使用mac的ituens导入音乐时会有乱码（尤其是中文歌曲）的问题，是因为mp3文件的id3标签编码的问题。
<!--more-->
搜索了一下有一个比较好的解决途径是下载id3mod，一个界面工具可以进行编码转换，但是免费版有一次转换的数量限制。所以采取一些开源的工具来解决这个问题：</p>

<ul>
  <li><a href="http://code.google.com/p/mp3tagiconv/">mp3tagiconv</a>是一款可用于解决MP3乱码问题的软件。它可以自动探测MP3标签的编码，并以合理的方式重新写入，经过其处理的编码可被Linux、Windows（包括Windows Media Player）和各种移动设备正确识别。</li>
  <li><a href="http://code.google.com/p/mutagen/">Mutagen</a> is a Python module to handle audio metadata. It supports ASF, FLAC, M4A, Monkey’s Audio, MP3, Musepack, Ogg FLAC, Ogg Speex, Ogg Theora, Ogg Vorbis, True Audio, WavPack and OptimFROG audio files. All versions of ID3v2 are supported, and all standard ID3v2.4 frames are parsed. It can read Xing headers to accurately calculate the bitrate and length of MP3s. ID3 and APEv2 tags can be edited regardless of audio format. It can also manipulate Ogg streams on an individual packet/page level.</li>
</ul>

<p>首先需要安装Mutagen，它是mp3tagiconv命令运行的必要环境</p>

<h4 id="section">安装过程：</h4>

<ul>
  <li>
    <p>下载到mutagen-1.20.tar.gz（可以在code google上下载最新版）</p>
  </li>
  <li>
    <p>执行：</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span><span class="nb">cd </span>mutagen-1.20
</span><span class="line"><span class="nv">$ </span>./setup.py build
</span><span class="line"><span class="nv">$ </span>sudo ./setup.py install
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>下载mp3tagiconv_0.1.tar.gz</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span><span class="nb">cd </span>mp3tagiconv_0.1
</span><span class="line"><span class="nv">$ </span>./mp3tagiconv test.mp3 <span class="c">#这条命令会要求确认所需要转换的信息是否正确，若无需确认，请参考下面一条命令</span>
</span><span class="line"><span class="nv">$ </span>./mp3tagiconv --do-update test.mp3
</span><span class="line"><span class="nv">$ </span>sudo cp mp3tagiconv /usr/bin
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>下面是一段ruby的一段脚本，可以批量修改音乐文件的编码信息：</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># encoding: utf-8</span>
</span><span class="line">require <span class="s1">&#39;pathname&#39;</span>
</span><span class="line">
</span><span class="line"><span class="nv">dir</span> <span class="o">=</span> <span class="s1">&#39;/Volumes/HD/music/1212&#39;</span>
</span><span class="line">
</span><span class="line"><span class="nv">files</span> <span class="o">=</span> Dir.entries<span class="o">(</span>dir<span class="o">)</span>
</span><span class="line"><span class="nv">reg</span> <span class="o">=</span> /mp3/
</span><span class="line">files.each <span class="k">do</span> |filename|
</span><span class="line">  <span class="k">if </span>filename.match<span class="o">(</span>reg<span class="o">)</span>
</span><span class="line">    <span class="nv">file</span> <span class="o">=</span> dir + <span class="s1">&#39;/&#39;</span> + filename
</span><span class="line">	<span class="nv">matched_str</span> <span class="o">=</span> reg.match<span class="o">(</span>filename<span class="o">)</span>
</span><span class="line">    <span class="nv">new_name</span> <span class="o">=</span> file.gsub<span class="o">(</span>/<span class="se">\s</span>|<span class="se">\&#39;</span>|-/<span class="o">)</span> <span class="o">{</span>|m| <span class="s1">&#39;\\&#39;</span> + m<span class="o">}</span>
</span><span class="line">	File.rename<span class="o">(</span>file, file.strip<span class="o">)</span>
</span><span class="line">    <span class="nv">result</span> <span class="o">=</span> <span class="sb">`</span>yes | mp3tagiconv <span class="c">#{new_name}`</span>
</span><span class="line">	puts result
</span><span class="line">  end
</span><span class="line">end
</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mac常用软件列表]]></title>
    <link href="http://irubi.github.io/blog/2012/11/23/macchang-yong-ruan-jian-lie-biao/"/>
    <updated>2012-11-23T12:21:00+08:00</updated>
    <id>http://irubi.github.io/blog/2012/11/23/macchang-yong-ruan-jian-lie-biao</id>
    <content type="html"><![CDATA[<p>一直想写这样一个帖子，和更多的人来分享mac下工作和生活的乐趣。
<!--more-->
因为我大部分时间是做rails web开发的，可能相关的工具会多一些。首先推荐几个国内不错的关于这方面的资源：</p>

<p><img src="http://pic.yupoo.com/irubi_v/CRLEMM0u/IP6t6.png" /></p>

<p>按顺序来讲：</p>

<ol>
  <li>Alfred 利用搜索来打开软件的利器，相当好使。不仅可以搜索打开文件，文件夹，甚至还能当计算器使用。</li>
  <li>TextMate 一个mac下的万能IDE，有很多hacker为它写了许多好用的bundle。让编程成为一件很酷的事情。</li>
  <li>BitTorrent BT客户端</li>
  <li>QQ 不解释</li>
  <li>SkinManager，这个是搜狗的皮肤管理器。搜狗拼音在mac上 已经被QQ输入法超越了。木有办法，谁让搜狗不努力呢。不过搜狗也还算不错了。</li>
  <li>Thunder Mac下的迅雷，虽然不抵win下好使，不过凑乎能用，也比网页下载要好些，也还算不错了</li>
  <li>Evernote 这个对于记笔记来说，那是最佳不二的选择，融入云的理念。太棒了！</li>
  <li>TotalTerminal 这个貌似之前叫做visor的东西，能让你的终端看起来很酷哟，而且相当的舒服，方便。我的快捷键是ctrl+space.搭配oh my zsh, 在mac下绝对是一条靓丽的风景线。</li>
  <li>Chrome Google旗下给力的一款浏览器。日常生活，web开发的利器。如果你不舍得ff的firebug,那么你试试chrome的web developer套装吧。绝对让你能舍弃ff了。</li>
  <li>VMware Fusion 虚拟机，对于一些需要某些环境下才能使用的软件，或者应用，用VMware来模拟绝对比什么什么box要好使，不过这个还是比较吃内存的，也比较耗费硬盘空间，我一般用来跑一个linux和xp。不过对于开发来说，需要一些linux环境，我推荐使用<a href="http://railscasts.com/episodes/292-virtual-machines-with-vagrant">vagrant</a></li>
  <li>Skype 一个IM工具，本来是很好用的，奈何QQ把我的好友都拉到他们那边去了，所以只能跟有限的一些高科技人才通过它交流了。不过顺便说一句，skype的开发团队在最近几个月不太给力，mac和ios平台上用起来很不爽，crash的频率很高。</li>
  <li>Wunderlist 这个不常使，不妄加评论。</li>
  <li>Caffeine 这个玩意儿可以在你看电影的时候不至于到多长时间的时候跳出屏保，或者锁屏，或者亮度变低等等事情发生，当然这些事情可以通过system preferences的设置来修改，但是不如在工具栏的右面有一个Caffeine开关来设置。当它冒热气的时候就打开，屏幕会一直保持高亮状态，点一下之后关闭，就会恢复系统默认的省电、屏保等到点开启的功能。</li>
  <li>KeyCue 软件快捷键提示。我觉得对于使用mac来说，最酷的事情就是脱离鼠标依赖，通过键盘来操作所有的工作，这样不仅可以集中注意力，专心做一件事情，而且可以很大程度上提高工作效率，不过，这是一个习惯养成的过程，所以这个工具就是在你目前打开某个软件的时候，点击两下cmd，第二次要长按住，可以显示当前软件能用到的所有快捷键说明。只要有心，这种习惯就可以慢慢养成。</li>
  <li>CopyPast Pro 对于文本编辑的人来说，ctrl c 和ctrl v是最常使的快捷键，而对于编程来说经常要交错的复制同一段内容，这样就得在不同的文件之间切换，这个工具就是为了解决这种不方便而设计的，用起来很方便。</li>
  <li>iCompta 貌似是记账的玩意儿，没怎么用过，好像不适合国内用户的样子呢。</li>
  <li>Balsamiq Mockups 用这个来粗略设计一些软件页面，可以将业务逻辑、流程更清晰化。设和产品设计时候用。</li>
  <li>Navicat Premium 数据库的一个front工具，个人感觉简单实用。</li>
  <li>GitX 2 git工具，可以查看每次commit的代码修改。</li>
  <li>VirtualBox 这个是为了尝试vagrant下下来使的。</li>
  <li>Secret Socks 这个是一个用ssh连接到某些服务器做代理用的。如果你有一些网站打不开，可以尝试用它先连到你能ssh到的某个访问不受限的网站，然后再打开那些打不开的网站。</li>
  <li>VLC 用了mplayer就不太爱用这个了。</li>
  <li>Firefox 偶尔用一下来测试我的web应用</li>
  <li>
    <p>Pixelmator 正在学习用它来稍微处理一些图，很强大，对于我这种不太会设计的人来说。</p>
  </li>
  <li>Onyx 我挺厌恶拿这个玩意儿比作优化大师这种说法，这玩意儿跟优化大师的体验那绝对是两个档次的东西。功能不算很多，但是很好用。</li>
  <li>CheckUp 能瞧见系统的各个犄角旮旯。界面还算酷。</li>
  <li>NowPlaying 这个不好使</li>
  <li>MplayerX 个人感觉这个播放器比vlc好用，播放也流畅，没有vlc复杂，支持的视频格式基本日常够用。</li>
  <li>MacKeeper 好像是系统信息查看的工具。没多使用过。</li>
  <li>TotalFinder 这个跟TotalTerminal是一伙人搞的，比默认的finder好用，支持多标签浏览。</li>
  <li>RailsLogVisualizer 是一个rails的日志分析工具，可以在优化rails程序的时候起到辅助作用，譬如查看一些数据查询需要的时间，页面加载速度等等。</li>
  <li>Calendar 这个跟ical貌似是一伙的，我不常用ical，所以就不详细描述了。</li>
  <li>有道词典 这个词典在mac上表现很不错哦</li>
  <li>Dropbox 苹果旗下有名的云服务哦,非常好使。听说同事每天晚上下班不用背电脑回家了。。</li>
  <li>Calibre 电子书管理器，听说挺好用的，可是我不爱读书。所以一直还没怎么用。</li>
  <li>MailTab for Gmail 这个可以在工具栏上实现Gmail的基本功能，而且还带提醒功能的，红的就是有未读邮件，黑的就是没有。不过感觉速度不行，应该是国内访问Gmail就是慢的缘故。</li>
  <li>Reeder Google reader的工具，界面做挺好的，就是我订阅的东西乱而杂，没耐心看，要不就是消磨时光用的。</li>
  <li>Shiftit 这个是用快捷键来操纵窗口的，譬如ctrl+alt+cmd+上下左右键可以将窗口放在屏幕的各个角落，还算实用，对于我这小屏幕来说。</li>
  <li>Cog 听歌的工具。 好多人夸，没觉得好使，国内貌似没有一款像模像样的音乐软件，酷x，酷y的大公司也不给开发个mac版，搞的我只能装个虚拟机跑这些软件，就为了听听歌。</li>
  <li>Skitch 截图软件，不错，还可以加标注什么的，很好用，而且还能网络共享。</li>
</ol>

<p><img src="http://farm8.staticflickr.com/7029/6559604683_747c3a2258.jpg" alt="sw2" title="sw2" /></p>

<ol>
  <li>Twitter 大名鼎鼎的twitter客户端，对于国内用户来说。什么也不说了。。看13吧。</li>
  <li>Macbo 新浪微博的客户端，还不错。</li>
  <li>Mou markdown文件编辑器，各种用户体验都好的很的说，不过不足之处在于，不能打开一个文件夹左面带导航，就跟textmate那种，可以很方便的选择想编辑的文件，现在我用就只能是textmate打开，然后选取想编辑的文件，右键mou打开来编辑。譬如现在写这篇博客。</li>
  <li>DTerm 这个可能对于某些不常用terminal的人来说比较实惠，随时随地可以呼唤terminal的工具。我不太爱用。</li>
  <li>Stufflt Expander 解压缩软件，支持各种格式。比什么betterzip的东西强多了。</li>
  <li>AppCleaner 软件卸载的工具。</li>
  <li>UnPlugged 用来提醒用户适配器的拔出、插入，电池使用等状况。不过在我多日使用情况来看，这个玩意儿不靠谱。</li>
  <li>Fresh Feed RSS追踪器，可以用来瞄一眼订阅的RSS有那些最新动态。</li>
  <li>iChm *.chm的打开工具。</li>
  <li>iTuneUp 一个系统监测的工具，很烦人的。建议不要使唤它。</li>
  <li>DesktopUtility 具体的使用情景比较不常见，用来盖桌面的。</li>
  <li>GitHub github的桌面客户端</li>
  <li>Astrill 这个对于国内用来来说，比较实惠，用来浏览一些会提示”This webpage is not available”的网站，或者打开一些连接超时的客户端。不过这个玩意儿要付钱的呢。</li>
  <li>Hype 这个是我之前想找一个好的HTML编辑器来着，下下来的坑爹货。不知道干吗使的。</li>
  <li>OmniGraffle Professional 这个用来画一些流程图、DFD或者是什么的挺好用。</li>
</ol>

<p>瞌睡了，先写这么多，完了想起来什么再补充。</p>

<p>2012-1-14</p>

<p>jitouch 在macx.cn上有下载，具体用法可以下载之后看配置里面，有动画演示</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[中文分词检索sphinx]]></title>
    <link href="http://irubi.github.io/blog/2012/04/20/zhong-wen-fen-ci-jian-suo-sphinx/"/>
    <updated>2012-04-20T11:20:00+08:00</updated>
    <id>http://irubi.github.io/blog/2012/04/20/zhong-wen-fen-ci-jian-suo-sphinx</id>
    <content type="html"><![CDATA[<p>讲述如何在Rails服务器上搭建中文搜索服务。
<!--more-->
中文版sphinx -&gt; coreseek</p>

<p><a href="http://www.coreseek.cn/docs/coreseek_4.1-sphinx_2.0.1-beta.html">官方文档</a></p>

<p>coreseek简单说就是支持中文分词的sphinx，所以选定最新beta版进行安装。</p>

<p>1.在centos 6.0上安装sphinx服务</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">sudo yum -y install yum glibc-common build-essential libtool autoconf automake libexpat-dev
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>下载 coreseek最新版， http://www.coreseek.cn/news/14/52/
解压之后</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nb">cd </span>mmseg-3.x.x
</span><span class="line">aclocal
</span><span class="line">libtoolize --force
</span><span class="line">automake --add-missing
</span><span class="line">autoconf
</span><span class="line">autoheader
</span><span class="line">make clean <span class="c">#此时如有错误可忽略不管</span>
</span><span class="line">./configure --prefix<span class="o">=</span>/usr/local/mmseg3
</span><span class="line">make
</span><span class="line">make install
</span><span class="line">cp -f src/*/*.h /usr/local/mmseg3/include/mmseg/
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>一定要执行以上的拷贝，否则make编译时会出错。</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">sudo ln -s /usr/local/mmseg/bin/mmseg /usr/bin
</span><span class="line">
</span><span class="line"><span class="o">[</span>root@localhost csft-4.1<span class="o">]</span><span class="c"># sh buildconf.sh </span>
</span><span class="line">
</span><span class="line"><span class="o">[</span>root@localhost csft-4.1<span class="o">]</span><span class="c"># export LIBS=&quot;-ldl -lutil -Xlinker -export-dynamic&quot;</span>
</span><span class="line">
</span><span class="line"><span class="o">[</span>root@localhost csft-4.1<span class="o">]</span><span class="c"># ./configure --prefix=/usr/local/coreseek --without-python --without-unixodbc --with-mysql --with-mmseg --with-mmseg-includes=/usr/local/mmseg/include/mmseg/ --with-mmseg-libs=/usr/local/mmseg/lib/</span>
</span><span class="line">
</span><span class="line"><span class="o">[</span>root@localhost csft-4.1<span class="o">]</span><span class="c"># make &amp;&amp; make install</span>
</span><span class="line">
</span><span class="line"><span class="nv">$ </span>yum install mysql-devel libxml2-devel expat-devel
</span><span class="line">
</span><span class="line"><span class="nv">$ </span><span class="nb">cd </span>csft-3.2.14
</span><span class="line">
</span><span class="line"><span class="nv">$ </span>make clean
</span><span class="line">
</span><span class="line"><span class="nv">$ </span>./configure -prefix<span class="o">=</span>/usr/local/coreseek  --without-unixodbc --with-mmseg --with-mmseg-includes<span class="o">=</span>/usr/local/mmseg/include/mmseg/ --with-mmseg-libs<span class="o">=</span>/usr/local/mmseg/lib/ --with-mysql
</span><span class="line"><span class="nv">$ </span>make <span class="o">&amp;&amp;</span> make install
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>需要将coreseek的命令加入path中，</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">vi ~/.bash_profile
</span><span class="line"><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="nv">$HOME</span>/bin:/usr/local/coreseek/bin/
</span><span class="line"><span class="nb">source</span> ~/.bash_profile
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">gem install thinking-sphinx
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Hack Thinking-Sphinx:</p>

<p>首先查看一下gem的安装路径</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">gem environment
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>修改thinking-sphix-gem:</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">vi <span class="nv">$thinking</span>-sphinx-gem-path/lib/thinking_sphinx/configuration.rb
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">self.index_options   <span class="o">=</span> <span class="o">{</span>
</span><span class="line">  :charset_type <span class="o">=</span>&gt; <span class="s2">&quot;zh_cn.utf-8&quot;</span>,
</span><span class="line">  :charset_dictpath <span class="o">=</span>&gt; <span class="s2">&quot;/usr/local/mmseg/etc&quot;</span>
</span><span class="line"><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="ubuntu">Ubuntu环境下：</h4>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">apt-get install make gcc g++ automake libtool mysql-client libmysqlclient15-dev   libxml2-dev libexpat1-dev
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>下载最新版</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nb">cd</span> ~
</span><span class="line">wget http://www.wapm.cn/uploads/csft/4.0/coreseek-4.1-beta.tar.gz
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>解压</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">tar -zxvf coreseek-4.1-beta.tar.gz
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>安装</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sublime IDE安装使用介绍]]></title>
    <link href="http://irubi.github.io/blog/2012/03/10/sublime-idean-zhuang-shi-yong-jie-shao/"/>
    <updated>2012-03-10T11:45:00+08:00</updated>
    <id>http://irubi.github.io/blog/2012/03/10/sublime-idean-zhuang-shi-yong-jie-shao</id>
    <content type="html"><![CDATA[<p>偶尔看到sublime这样一款类textmate IDE还是蛮兴奋的，一直觉得一款好的IDE应该简单，易用。学习成本不高。用的爽，看着爽是非常重要的，作为一个每天面对代码的人来说，为了让眼球保持舒爽一款decent的IDE是必不可少的。</p>

<p>而且sublime text2是一个跨平台的编辑器，光看截图就够诱惑的了。</p>

<p>价格： USD $59, 不过未注册可以正常使用所有功能，只是会不时的在保存文件时提示购买。
<!--more--></p>

<ol>
  <li><a href="http://www.sublimetext.com/">下载</a>安装，因为GTW的原因，需要翻墙下载。</li>
  <li>在terminal中可以使用sublime text打开file或者folder进行编辑</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">sudo ln -s /Applications/Sublime<span class="se">\ </span>Text<span class="se">\ </span>2.app/Contents/SharedSupport/bin/subl /usr/bin/st
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ol>
  <li>以后就可以下面的命令来打开单个文件或者目录进行工作了。</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">folder &gt; st filename.txt
</span><span class="line">folder &gt; st .
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ol>
  <li>
    <p>开始使用</p>

    <ul>
      <li>
        <p>可以试试这个新的<a href="http://www.sublimetext.com/forum/download/file.php?id=200">icon</a>
下载解压之后到/Applications/Sublime\ Text\ 2.app/Contents/Resources下替换原来的文件即可</p>
      </li>
      <li>
        <p>shortcut:</p>
      </li>
    </ul>
  </li>
</ol>

<p><img src="http://pic.yupoo.com/irubi_v/CRLEVIMb/Bask3.png" />
上面的几个方式可以组合使用，基本是2合1居多，譬如要跳转到home_contrller的index方法，可以用cmd t输入homectr@index</p>

<ul>
  <li>多重选择
    <ul>
      <li>按住cmd拖动鼠标选取，可以任意多重选取</li>
      <li>按住alt可以纵向选取一个区块</li>
      <li>cmd d可以将与已经选择的内容相同的内容加入选择，或者ctrl+cmd+G可以一次性将与已选内容相同的内容加入选择。        </li>
    </ul>
  </li>
  <li>
    <p>package control</p>

    <p>类似于textmate的bundle，sublimetext也有一个叫做package control的东西.
在sublimetext中打开console，ctrl `输入下面的命令：</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">import urllib2,os;pf<span class="o">=</span><span class="s1">&#39;Package Control.sublime-package&#39;</span>;<span class="nv">ipp</span><span class="o">=</span>sublime.installed_packages_path<span class="o">()</span>;os.makedirs<span class="o">(</span>ipp<span class="o">)</span> <span class="k">if </span>not os.path.exists<span class="o">(</span>ipp<span class="o">)</span> <span class="k">else </span>None;open<span class="o">(</span>os.path.join<span class="o">(</span>ipp,pf<span class="o">)</span>,<span class="s1">&#39;wb&#39;</span><span class="o">)</span>.write<span class="o">(</span>urllib2.urlopen<span class="o">(</span><span class="s1">&#39;http://sublime.wbond.net/&#39;</span>+pf.replace<span class="o">(</span><span class="s1">&#39; &#39;</span>,<span class="s1">&#39;%20&#39;</span><span class="o">))</span>.read<span class="o">())</span>
</span><span class="line">	
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>执行，然后重启sublimetext，会在preterences -&gt; package settings中发现package control。</p>

<ul>
  <li>代码对齐
  举例来说,有下面这样格式的代码：</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="c"><span class="line">  <span class="n">var</span> <span class="n">joe</span> <span class="o">=</span> <span class="err">&#39;</span><span class="n">joe</span><span class="err">&#39;</span><span class="p">;</span>
</span><span class="line"><span class="n">var</span> <span class="n">johnny</span> <span class="o">=</span> <span class="err">&#39;</span><span class="n">johnny</span><span class="err">&#39;</span><span class="p">;</span>
</span><span class="line"><span class="n">var</span> <span class="n">quaid</span> <span class="o">=</span> <span class="err">&#39;</span><span class="n">quaid</span><span class="err">&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>看起来会很不爽，因为第一行没有对齐，等号也没对齐。</p>

<p>下面需要安装一个自动对齐的package，用shift cmd p调出package control面板，输入install然后按回车，输入alignment进行安装，重启sublimetext然后选择之前的这段代码，按ctrl+cmd+a，第一次按会将第一行对齐，第二次会将等号对齐，第三次就不会有反应了。很棒的功能。</p>

<ul>
  <li>
    <p>执行代码</p>

    <p>编写完代码可以执行cmd d来执行代码。</p>
  </li>
  <li>
    <p>无干扰模式</p>

    <p>ctrl shift cmd f或者在view中选择Enter distraction free mode。
可以在preferences -&gt; settings-more -&gt; distraction free -user中进行防干扰模式的设置：</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="nt">&quot;line_numbers&quot;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>      <span class="err">//是否显示行号</span>
</span><span class="line">    <span class="nt">&quot;gutter&quot;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>            <span class="err">//是否显示边列</span>
</span><span class="line">    <span class="nt">&quot;draw_centered&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>      <span class="err">//是否居中显示</span>
</span><span class="line">    <span class="nt">&quot;wrap_width&quot;</span><span class="p">:</span> <span class="mi">80</span><span class="p">,</span>           <span class="err">//换行宽度(单位：字符)</span>
</span><span class="line">    <span class="nt">&quot;word_wrap&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>          <span class="err">//是否自动换行</span>
</span><span class="line">    <span class="nt">&quot;scroll_past_end&quot;</span><span class="p">:</span> <span class="kc">true</span>     <span class="err">//滚动能否超过结尾</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>TextMate Bundle</li>
</ul>

<p>只要将textmate的bundle直接拷贝到packages目录中就能用，包括textmate的色彩主题。</p>

<ul>
  <li>sublimetext主题和几个好用的插件
看下面两张展示图:</li>
</ul>

<p><img src="http://buymeasoda.github.com/soda-theme/images/screenshots/soda-2-light-theme.png?v=4" /></p>

<p><img src="http://buymeasoda.github.com/soda-theme/images/screenshots/soda-2-dark-theme.png?v=2" /></p>

<ul>
  <li>
    <p>安装</p>

    <p>打开<code>sublime text2 -&gt; preferences -&gt; broswer packages</code>, 在终端进入该目录， 将主题的内容放进去.</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">git clone https://github.com/buymeasoda/soda-theme/ <span class="s2">&quot;Theme - Soda&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>打开<code>Sublime Text 2 -&gt; Preferences -&gt; Settings - User</code>,</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="o">{</span>
</span><span class="line">  <span class="s2">&quot;theme&quot;</span>: <span class="s2">&quot;Soda Dark.sublime-theme&quot;</span>,
</span><span class="line">  <span class="s2">&quot;soda_classic_tabs&quot;</span>: <span class="nb">true</span>
</span><span class="line"><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果在保存文件时发生错误，应该是语法问题，逗号没有写对之类的。</p>

<p>Soda还有两个语法高亮颜色的配置方案，将<code>colour-schemes.zip</code>解压之后得到的两个<code>*.tmtheme</code>放到<code>'Packages/User'</code>目录下
选择<code>Preferences-&gt; Color Scheme -&gt; User -&gt; **soda..</code></p>

<h5 id="section">参考文章：</h5>

<p><a href="https://github.com/neilsarkar/sublime_user_directory">快捷键和几个plugins</a></p>

<p><a href="http://www.henriquebarroso.com/my-top-10sublime-2-plugins/">top 10 plugins</a></p>

<p>打开10000行以上的代码文件也不会像textmate一样卡卡卡之后就crash，之前必须得用xcode来打开，编辑，然后保存。现在用sublimetext不会有这种情况了，打开很快不会卡。</p>

<p>标签什么的有点chrome的感觉，很流畅，很舒服，也没有什么很华丽的让人目眩的东西。而且现在试用没有时间限制，只是在保存的时候会弹出一个让你购买的提示。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lion 上配置 ROR 环境]]></title>
    <link href="http://irubi.github.io/blog/2012/02/19/lion-shang-pei-zhi-ror-huan-jing/"/>
    <updated>2012-02-19T11:52:00+08:00</updated>
    <id>http://irubi.github.io/blog/2012/02/19/lion-shang-pei-zhi-ror-huan-jing</id>
    <content type="html"><![CDATA[<!--more-->

<ul>
  <li>安装<a href="http://totalterminal.binaryage.com">total terminal</a>和<a href="https://github.com/robbyrussell/oh-my-zsh">oh-my-zsh</a></li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">mate ~/.zshrc
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>修改theme参数：</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">ZSH_THEME</span><span class="o">=</span><span class="s2">&quot;robbyrussell&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>打开totalterminal preference， 设置homebrew 为default theme, 然后修改其配置选项如图：</p>

<p><img src="http://pic.yupoo.com/irubi_v/CRLEVIMb/Bask3.png" /></p>

<ul>
  <li>
    <p>安装、配置 <a href="http://help.github.com/mac-set-up-git/">git</a></p>
  </li>
  <li>
    <p>安装<a href="https://github.com/mxcl/homebrew">homebrew</a></p>
  </li>
  <li>
    <p>安装 <a href="http://beginrescueend.com/rvm/install/">rvm</a></p>
  </li>
</ul>

<p>然后执行</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nb">source</span> ~/.zshrc
</span><span class="line"><span class="nb">type </span>rvm | head -1
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>rvm 安装成功</p>

<p>如果在下面的安装过程中出现错误，请确保已经安装了xcode command line tools。</p>

<ul>
  <li>
    <p>安装ruby</p>

    <p>可以先看一下</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">rvm list known
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>安装1.9.3</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">rvm install 1.9.3
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>安装完成之后</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">rvm use 1.9.3 --default
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>看看irb是否支持中文, 如果不支持，在~/.zshrc中加入</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nb">export </span><span class="nv">LC_ALL</span><span class="o">=</span>en_US.UTF-8
</span><span class="line"><span class="nb">export </span><span class="nv">LANG</span><span class="o">=</span>en_US.UTF-8
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>安装完成</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[获取GA数据并绘制chart]]></title>
    <link href="http://irubi.github.io/blog/2012/02/13/huo-qu-gashu-ju-bing-hui-zhi-chart/"/>
    <updated>2012-02-13T12:00:00+08:00</updated>
    <id>http://irubi.github.io/blog/2012/02/13/huo-qu-gashu-ju-bing-hui-zhi-chart</id>
    <content type="html"><![CDATA[<p>使用garb来获取GA上面的网站分析数据，再通过获取的数据用highcharts来绘制曲线
<!--more--></p>

<p><a href="https://github.com/vigetlabs/garb">garb</a>是一个用来调用Google Analytics API的Ruby gem.
首先需要在rails中新建一个script：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>script/ga.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">p</span> <span class="s2">&quot;----loGin Google----&quot;</span>
</span><span class="line"><span class="ss">Garb</span><span class="p">:</span><span class="ss">:Session</span><span class="o">.</span><span class="n">login</span><span class="p">(</span><span class="s1">&#39;google account&#39;</span><span class="p">,</span> <span class="s1">&#39;password&#39;</span><span class="p">)</span>
</span><span class="line"><span class="nb">p</span> <span class="s2">&quot;----Get Profile----&quot;</span>
</span><span class="line"><span class="n">profile</span> <span class="o">=</span> <span class="ss">Garb</span><span class="p">:</span><span class="ss">:Profile</span><span class="o">.</span><span class="n">first</span><span class="p">(</span><span class="s2">&quot;UA-XXXXXXX-X&quot;</span><span class="p">)</span>
</span><span class="line"><span class="nb">p</span> <span class="n">profile</span>
</span><span class="line"><span class="nb">p</span> <span class="s2">&quot;-----Get unique PV----&quot;</span>
</span><span class="line">
</span><span class="line"><span class="n">start_date</span> <span class="o">=</span> <span class="no">Date</span><span class="o">.</span><span class="n">today</span> <span class="o">-</span> <span class="mi">30</span>
</span><span class="line"><span class="n">end_date</span> <span class="o">=</span> <span class="no">Date</span><span class="o">.</span><span class="n">today</span>
</span><span class="line">
</span><span class="line"><span class="nb">p</span> <span class="s2">&quot;-----Define a specific page----&quot;</span>
</span><span class="line"><span class="n">project_id</span> <span class="o">=</span> <span class="mi">123456</span>
</span><span class="line">
</span><span class="line"><span class="nb">p</span> <span class="s2">&quot;-----fetch the page (uri: /projects/12345) unique pageview----&quot;</span>
</span><span class="line">
</span><span class="line"><span class="p">(</span><span class="n">start_date</span><span class="o">.</span><span class="n">.end_date</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">date</span><span class="o">|</span>
</span><span class="line">  <span class="n">result_set</span> <span class="o">=</span> <span class="no">Exits</span><span class="o">.</span><span class="n">results</span><span class="p">(</span><span class="n">profile</span><span class="p">,</span> <span class="ss">:start_date</span> <span class="o">=&gt;</span> <span class="n">date</span><span class="p">,</span>
</span><span class="line">                              <span class="ss">:end_date</span> <span class="o">=&gt;</span> <span class="n">date</span><span class="p">,</span>
</span><span class="line">                              <span class="ss">:filters</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:page_path</span><span class="o">.</span><span class="n">eql</span> <span class="o">=&gt;</span> <span class="s1">&#39;/projects/&#39;</span> <span class="o">+</span> <span class="n">project_id</span><span class="o">.</span><span class="n">to_s</span><span class="p">})</span>
</span><span class="line">
</span><span class="line">  <span class="n">result_set</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">result</span><span class="o">|</span>
</span><span class="line">    <span class="c1">#puts date.to_s + &quot;-&gt; &quot; + result.unique_pageviews.to_s</span>
</span><span class="line">    <span class="no">Pv</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:ga_date</span> <span class="o">=&gt;</span> <span class="n">date</span><span class="p">,</span>
</span><span class="line">              <span class="ss">:upv</span> <span class="o">=&gt;</span> <span class="n">result</span><span class="o">.</span><span class="n">unique_pageviews</span><span class="p">,</span>
</span><span class="line">              <span class="ss">:pv</span> <span class="o">=&gt;</span> <span class="n">result</span><span class="o">.</span><span class="n">pageviews</span><span class="p">,</span>
</span><span class="line">              <span class="ss">:project_id</span> <span class="o">=&gt;</span> <span class="n">project_id</span><span class="o">.</span><span class="n">to_s</span><span class="p">)</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这里代码执行的前提是有一个存放pv数据的表和一个Exits的Model</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/models/exits.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">Exits</span>
</span><span class="line">  <span class="kp">extend</span> <span class="ss">Garb</span><span class="p">:</span><span class="ss">:Model</span>
</span><span class="line">  <span class="n">metrics</span> <span class="ss">:pageviews</span><span class="p">,</span> <span class="ss">:unique_pageviews</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/models/pv.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1"># t.date :ga_date</span>
</span><span class="line"><span class="c1"># t.integer :upv, :default =&gt; 0</span>
</span><span class="line"><span class="c1"># t.integer :pv, :default =&gt; 0</span>
</span><span class="line"><span class="c1"># t.integer :project_id</span>
</span><span class="line"><span class="c1"># t.timestamps</span>
</span><span class="line"><span class="k">class</span> <span class="nc">Pv</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这样就可以将这个projects/123456页面的upv存放到数据库中了。不过这里的数据关系没有进行关联，仅作为一个demo来演示如何进行数据获取及chart绘制，所以具体应用可以根据实际情况进行设计。</p>

<p>另外还需要说明的一点就是，这里是获取一个月之内的每日upv数据，可能存在该页面访问量为0的数据，这种数据不会存入数据库中，所以需要在绘图的时候进行判断处理。</p>

<p>运行script/ga.rb的命令：</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">script/rails runner script/ga_pv.rb
</span><span class="line">script/rails runner -e production script/test.rb
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="cronga">可以在部署之后将命令加入cron中，让它每日定时去抓取GA的数据。</h2>

<p>绘制chart:</p>

<p>绘图使用<a href="http://www.highcharts.com/">highchart</a>, 下载highchats的js包，并放到app/assets/javascripts/目录下。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/views/demo/chart.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="err">&lt;</span>% content_for :head do %&gt;
</span><span class="line">  <span class="err">&lt;</span>%= javascript_include_tag &quot;highcharts&quot; %&gt;
</span><span class="line">
</span><span class="line"><span class="err">&lt;</span>% end %&gt;
</span><span class="line"><span class="nt">&lt;script&gt;</span>
</span><span class="line">    <span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">       <span class="nx">chart</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Highcharts</span><span class="p">.</span><span class="nx">Chart</span><span class="p">({</span>
</span><span class="line">            <span class="nx">chart</span><span class="o">:</span> <span class="p">{</span>
</span><span class="line">                <span class="nx">renderTo</span><span class="o">:</span> <span class="s2">&quot;project_upv_chart&quot;</span><span class="p">,</span>
</span><span class="line">                <span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;spline&#39;</span>
</span><span class="line">            <span class="p">},</span>
</span><span class="line">            <span class="nx">title</span><span class="o">:</span> <span class="p">{</span>
</span><span class="line">              <span class="nx">text</span><span class="o">:</span> <span class="s2">&quot;每日不重复访客数&quot;</span>
</span><span class="line">            <span class="p">},</span>
</span><span class="line">            <span class="nx">xAxis</span><span class="o">:</span> <span class="p">{</span>
</span><span class="line">                <span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;datetime&#39;</span><span class="p">,</span>
</span><span class="line">                <span class="nx">labels</span><span class="o">:</span> <span class="p">{</span>
</span><span class="line">                    <span class="nx">formatter</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">                        <span class="k">return</span> <span class="nx">Highcharts</span><span class="p">.</span><span class="nx">dateFormat</span><span class="p">(</span><span class="s1">&#39;%b月%e日&#39;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span>
</span><span class="line">                   <span class="p">}</span>
</span><span class="line">               <span class="p">}</span>
</span><span class="line">            <span class="p">},</span>
</span><span class="line">            <span class="nx">yAxis</span><span class="o">:</span> <span class="p">{</span>
</span><span class="line">              <span class="nx">min</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class="line">              <span class="nx">allowDecimals</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class="line">              <span class="nx">title</span><span class="o">:</span> <span class="p">{</span>
</span><span class="line">                <span class="nx">text</span><span class="o">:</span> <span class="s2">&quot;访问数&quot;</span>
</span><span class="line">              <span class="p">}</span>
</span><span class="line">            <span class="p">},</span>
</span><span class="line">            <span class="nx">tooltip</span><span class="o">:</span> <span class="p">{</span>
</span><span class="line">              <span class="nx">formatter</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">                <span class="k">return</span> <span class="nx">Highcharts</span><span class="p">.</span><span class="nx">dateFormat</span><span class="p">(</span><span class="s2">&quot;%Y年%b月%e日 %A&quot;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;&lt;br/&gt;&quot;</span> <span class="o">+</span> <span class="s1">&#39;唯一身份浏览量： &#39;</span> <span class="o">+</span>
</span><span class="line">                <span class="nx">Highcharts</span><span class="p">.</span><span class="nx">numberFormat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
</span><span class="line">              <span class="p">}</span>
</span><span class="line">            <span class="p">},</span>
</span><span class="line">            <span class="nx">series</span><span class="o">:</span> <span class="p">[{</span>
</span><span class="line">              <span class="nx">pointInterval</span><span class="o">:</span> <span class="o">&lt;%=</span> <span class="mi">1</span><span class="p">.</span><span class="nx">day</span><span class="p">.</span><span class="nx">to_i</span> <span class="o">*</span> <span class="mi">1000</span> <span class="o">%&gt;</span><span class="p">,</span>
</span><span class="line">              <span class="o">&lt;%</span> <span class="nx">start_date</span> <span class="o">=</span> <span class="p">(</span><span class="nx">Time</span><span class="p">.</span><span class="nx">now</span> <span class="o">-</span> <span class="mi">30</span><span class="p">.</span><span class="nx">days</span><span class="p">)</span> <span class="o">%&gt;</span>
</span><span class="line">              <span class="o">&lt;%</span> <span class="nx">end_date</span> <span class="o">=</span> <span class="nx">Time</span><span class="p">.</span><span class="nx">now</span> <span class="o">%&gt;</span>
</span><span class="line">              <span class="nx">pointStart</span><span class="o">:</span> <span class="o">&lt;%=</span> <span class="nx">start_date</span><span class="p">.</span><span class="nx">to_i</span> <span class="o">*</span> <span class="mi">1000</span> <span class="o">%&gt;</span><span class="p">,</span>
</span><span class="line">              <span class="nx">data</span><span class="o">:</span> <span class="o">&lt;%=</span> <span class="p">(</span><span class="nx">start_date</span><span class="p">.</span><span class="nx">to_date</span><span class="p">..</span><span class="nx">end_date</span><span class="p">.</span><span class="nx">to_date</span><span class="p">).</span><span class="nx">map</span> <span class="p">{</span><span class="o">|</span><span class="nx">date</span><span class="o">|</span> <span class="nx">Pv</span><span class="p">.</span><span class="nx">find_by_ga_date</span><span class="p">(</span><span class="nx">date</span><span class="p">).</span><span class="nx">nil</span><span class="o">?</span> <span class="o">?</span> <span class="mi">0</span> <span class="o">:</span> <span class="nx">Pv</span><span class="p">.</span><span class="nx">find_by_ga_date</span><span class="p">(</span><span class="nx">date</span><span class="p">).</span><span class="nx">upv</span><span class="p">}.</span><span class="nx">inspect</span><span class="o">%&gt;</span>
</span><span class="line">          <span class="p">}]</span>
</span><span class="line">        <span class="p">});</span>
</span><span class="line"><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;.highcharts-legend&quot;</span><span class="p">).</span><span class="nx">hide</span><span class="p">();</span>
</span><span class="line">    <span class="p">});</span>
</span><span class="line"><span class="nt">&lt;/script&gt;</span>
</span><span class="line"><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;project_upv_chart&quot;</span> <span class="na">style=</span><span class="s">&quot;width:560px; height:300px;&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>在highcharts.js中修改几个需要汉化的地方，有月份，星期等。</p>

<p>在上面的代码中，如果是单一的数据曲线，希望隐藏图表下面的series选择按钮，可以加入<code>$(".highcharts-legend").hide();</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用bundle创建、发布、删除gem]]></title>
    <link href="http://irubi.github.io/blog/2012/02/09/li-yong-bundlechuang-jian-%2C-fa-bu-%2C-shan-chu-gem/"/>
    <updated>2012-02-09T12:13:00+08:00</updated>
    <id>http://irubi.github.io/blog/2012/02/09/li-yong-bundlechuang-jian-,-fa-bu-,-shan-chu-gem</id>
    <content type="html"><![CDATA[<p>使用bundle工具来做自己的gem，并且把gem发布！
<!--more--></p>

<p>首先需要系统的RubyGems 1.3.6+ and gemcutter 0.5.0+. </p>

<p>如果版本不对或者没有安装可以执行：</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">gem update --system
</span><span class="line">gem install gemcutter
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>创建和发布：
参考<a href="http://railscasts.com/episodes/245-new-gem-with-bundler">railscasts</a></p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">bundle gem <span class="o">[</span>gemname<span class="o">]</span>
</span><span class="line">gem build <span class="o">[</span>gemname<span class="o">]</span>.gemspec
</span><span class="line">gem push <span class="o">[</span>gemname<span class="o">]</span>-<span class="o">[</span>version_number<span class="o">]</span>.gem
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>删除gem</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">gem yank <span class="o">[</span>gemname<span class="o">]</span> -v<span class="o">[</span>version_number<span class="o">]</span>
</span><span class="line">gem yank <span class="o">[</span>gemname<span class="o">]</span> -v<span class="o">[</span>version_number<span class="o">]</span> --undo
</span><span class="line">rake gemcutter:index:update
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>只能yank,但是不能阻止下载， 如果要彻底删除的话还得发一个dicussion 上去申请删除，要不然会影响到下载用户的使用。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails app如何实现AB测试]]></title>
    <link href="http://irubi.github.io/blog/2012/01/10/rails-appru-he-shi-xian-abce-shi/"/>
    <updated>2012-01-10T12:16:00+08:00</updated>
    <id>http://irubi.github.io/blog/2012/01/10/rails-appru-he-shi-xian-abce-shi</id>
    <content type="html"><![CDATA[<p>rails框架实现AB测试</p>

<p>1.什么是A/B测试</p>

<p>A/B测试又叫split测试，其实叫split测试更准确一些，因为测试并不局限于非A即B，而是适用于多种场景的。对于web应用来说，A/B测试是指一个页面对用户可呈现几种不同的view，以测试其相应功能在哪种view的情况下效果会更好一些。</p>

<p>2.A/B测试的关键</p>

<ul>
  <li>用户数据量大, 平均出现; </li>
  <li>相关度; 测试内容应该和相应业务逻辑相关，根据测试结果可以决策采取哪种view。</li>
</ul>

<!--more-->

<p>举例来说，对于电商网站的某个产品介绍页面，该页面直接关系到订单提交（也即购买）的核心业务逻辑，现在进行A/B测试，呈现给用户不同的view，然后根据用户提交订单数量及用户打开该页面次数进行记录得到测试数据，进而判断哪个view是最好的。</p>

<p><img class="center" src="http://pic.yupoo.com/irubi_v/CRLEK4ml/NHO5l.png" /></p>

<p>3.A/B测试的手段</p>

<p>Google Website Optimizer，可能是一个最简单的工具，但是它适合静态的页面，不能整合到动态网站中。所以，如果要在在动态网站中进行A/B测试必须将测试工具整合到应用中。</p>

<p>在rails中实现A/B测试的方式：</p>

<p>1.设置视图(2个或更多)</p>

<p>2.视图与业务逻辑的相关性（多对一或多对多，个人认为多对一的测试较准确）</p>

<p>3.设置视图的呈现逻辑（利用用户浏览器的session（登陆或匿名用户），随机数（用户发起请求时间隔呈现），注册用户id划分等等）</p>

<p>4.在测试数据量增大到一定程度，数据相对稳定的情况下判断哪种视图最优。</p>

<hr />

<p>下面是rails中如何实现AB测试。
rails提供了三个工具来做A/B测试。</p>

<p>实现一个简单的demo，整个过程是这样的：一个博客程序，在新建post的时候给用户呈递不同的视图，然后根据用户创建文章的情况来判断哪种情况会更好。</p>

<p>1.新建blog app：</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>rails new blog -d mysql
</span><span class="line"><span class="nv">$ </span><span class="nb">cd </span>blog
</span><span class="line"><span class="nv">$ </span>rails g scaffold post title:string content:text
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>2.A/B测试工具</p>

<ul>
  <li>
    <p><a href="https://github.com/webandy/abingo">abingo</a> 这个是专门针对A/B测试的一个插件，简单易用，足以应付普通的测试场景的需求了。但可惜的是，它只能用于rails2，在rails3上面有bug，所以这里不详细介绍了。<a href="railscasts.com/episodes/214-a-b-testing-with-a-bingo?view=asciicast">railscasts</a>中有一集做了详细介绍。</p>
  </li>
  <li>
    <p><a href="https://github.com/assaf/vanity">vanity</a>比较专业的一个。他是专门用来做Experiment Driven Development（体验驱动开发）的一个gem, A/B测试只是其中一部分，<a href="http://vanity.labnotes.org/ab_testing.html">参考</a>。</p>
  </li>
  <li>
    <p><a href="https://github.com/andrew/split">split</a>支持rails 3，并且使用 redis来作数据存储，所以需要安装redis环境</p>
  </li>
</ul>

<p>安装gem</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>gem <span class="s1">&#39;split&#39;</span>
</span><span class="line"><span class="nv">$ </span>bundle install
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>安装并启动redis(mac环境下)</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>brew install redis
</span><span class="line"><span class="nv">$ </span>redis-server /usr/local/etc/redis.conf
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>在新建post的页面的同一个位置设置三种不同的视图，分别命名为plan<em>1, plan</em>2, plan_3。当用户在刷新这一页的时候会出现这三种不同的视图。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/views/posts/new.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">New</span> <span class="n">post</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class="line"><span class="sr">&lt;% ab_test(&quot;create_post_intro&quot;, &quot;plan_1&quot;, &quot;plan_2&quot;, &quot;plan_3&quot;) do |plan|%&gt;</span>
</span><span class="line"><span class="sr">  &lt;% case plan %&gt;</span>
</span><span class="line"><span class="sr">  &lt;% when &quot;plan_1&quot;%&gt;</span>
</span><span class="line"><span class="sr">     &lt;div id=&quot;plan_1&quot;&gt;</span>
</span><span class="line"><span class="sr">        11..</span>
</span><span class="line"><span class="sr">     &lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="sx">% when </span><span class="s2">&quot;plan_2&quot;</span><span class="sx">%&gt;</span>
</span><span class="line"><span class="sx">     &lt;div id=&quot;plan_2&quot;&gt;</span>
</span><span class="line">        <span class="mi">22</span><span class="o">.</span><span class="n">.</span>
</span><span class="line">     <span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class="line"><span class="sr">  &lt;% when &quot;plan_3&quot;%&gt;</span>
</span><span class="line"><span class="sr">     &lt;div id=&quot;plan_3&quot;&gt;</span>
</span><span class="line"><span class="sr">        33..</span>
</span><span class="line"><span class="sr">     &lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class="line">  <span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class="line"><span class="sx">&lt;% end %&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="sx">%= render &#39;form&#39; %&gt;</span>
</span><span class="line">
</span><span class="line"><span class="sx">&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;Back&#39;</span><span class="p">,</span> <span class="n">posts_path</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果现在查看浏览器posts/new的话，可以通过刷新看到三个不同的视图。</p>

<p>create_post_intro可以看作这个A/B测试的名称描述，下面在create的action中加入记录：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/controllers/posts_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">create</span>
</span><span class="line">  <span class="vi">@post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:post</span><span class="o">]</span><span class="p">)</span>
</span><span class="line">  <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class="line">    <span class="k">if</span> <span class="vi">@post</span><span class="o">.</span><span class="n">save</span>
</span><span class="line">      <span class="n">finished</span><span class="p">(</span><span class="s2">&quot;create_post_intro&quot;</span><span class="p">)</span>
</span><span class="line">      <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span class="vi">@post</span><span class="p">,</span> <span class="ss">notice</span><span class="p">:</span> <span class="s1">&#39;Post was successfully created.&#39;</span> <span class="p">}</span>
</span><span class="line">      <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@post</span><span class="p">,</span> <span class="ss">status</span><span class="p">:</span> <span class="ss">:created</span><span class="p">,</span> <span class="ss">location</span><span class="p">:</span> <span class="vi">@post</span> <span class="p">}</span>
</span><span class="line">    <span class="k">else</span>
</span><span class="line">      <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">action</span><span class="p">:</span> <span class="s2">&quot;new&quot;</span> <span class="p">}</span>
</span><span class="line">      <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@post</span><span class="o">.</span><span class="n">errors</span><span class="p">,</span> <span class="ss">status</span><span class="p">:</span> <span class="ss">:unprocessable_entity</span> <span class="p">}</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以测试一下提交表单，未提交表单等等。</p>

<p>如何显示测试结果？</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app/config/routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;split/dashboard&#39;</span>
</span><span class="line"><span class="ss">Blog</span><span class="p">:</span><span class="ss">:Application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class="line">  <span class="n">mount</span> <span class="ss">Split</span><span class="p">:</span><span class="ss">:Dashboard</span> <span class="o">=&gt;</span> <span class="s2">&quot;/split&quot;</span>
</span><span class="line">  <span class="n">resources</span> <span class="ss">:posts</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>此时打开/split可以看到结果如下图：
<img class="center" src="http://pic.yupoo.com/irubi_v/CRLEK4ml/NHO5l.png" /></p>

<p>可以根据split的统计数据进行判断和决策。</p>

<p>现在基本上A/B测试的功能已经搞定了，但是没有定制视图展示策略，没有在显示/split的页面加入auth。具体方式可以参考<a href="https://github.com/andrew/split">split</a> 在github上的文档.</p>

<p>另外，<a href="http://www.smashingmagazine.com/2010/06/24/the-ultimate-guide-to-a-b-testing/">这里</a>对于A/B测试做什么，怎么做，以及一些线上的demo，介绍的还不错。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[替换html中的链接地址]]></title>
    <link href="http://irubi.github.io/blog/2011/11/25/ti-huan-htmlzhong-de-lian-jie-di-zhi/"/>
    <updated>2011-11-25T12:19:00+08:00</updated>
    <id>http://irubi.github.io/blog/2011/11/25/ti-huan-htmlzhong-de-lian-jie-di-zhi</id>
    <content type="html"><![CDATA[<p>应用场景：将文本或者html中链接进行短地址转换，或者替换为可追踪的链接。
<!--more-->
代码：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>gsub_links.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;Digest&#39;</span>
</span><span class="line"><span class="k">def</span> <span class="nf">gsub_links</span><span class="p">(</span><span class="n">conetnt</span><span class="p">,</span> <span class="n">domain</span><span class="p">)</span>
</span><span class="line">  <span class="n">hash_links</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class="line">  <span class="n">time</span> <span class="o">=</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span>
</span><span class="line">  <span class="n">links_arr</span> <span class="o">=</span> <span class="n">content</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/&lt;a.*?href=([&#39;&quot;])(.*?)\1.*?&gt;/</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span><span class="o">|</span><span class="n">m</span><span class="o">|</span> <span class="n">m</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="p">}</span>
</span><span class="line">  <span class="n">links_arr</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">l</span><span class="o">|</span>
</span><span class="line">    <span class="n">hash_links</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">l</span><span class="si">}</span><span class="s2">&quot;</span><span class="o">]</span> <span class="o">=</span> <span class="ss">Digest</span><span class="p">:</span><span class="ss">:SHA1</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">(</span><span class="n">l</span><span class="o">+</span><span class="n">time</span><span class="o">.</span><span class="n">to_s</span><span class="p">)</span><span class="o">[</span><span class="mi">8</span><span class="o">.</span><span class="n">.</span><span class="mi">16</span><span class="o">]</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">  <span class="n">content</span><span class="o">.</span><span class="n">gsub!</span><span class="p">(</span><span class="sr">/&lt;a.*?href=([&#39;&quot;])(.*?)\1.*?&gt;/</span><span class="p">){</span><span class="o">|</span><span class="n">s</span><span class="o">|</span><span class="n">s</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="vg">$2</span><span class="p">,</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">domain</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="ss">Digest</span><span class="p">:</span><span class="ss">:SHA1</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">(</span><span class="vg">$2</span><span class="o">+</span><span class="n">time</span><span class="o">.</span><span class="n">to_s</span><span class="p">)</span><span class="o">[</span><span class="mi">8</span><span class="o">.</span><span class="n">.</span><span class="mi">16</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)}</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>content是html代码的内容，对于正则表达式<code>/&lt;a.*?href=(['"])(.*?)\1.*?&gt;/</code>会匹配到类似<code>&lt;a href="http://test.com"&gt;</code>的字符串，匹配会得到两个结果，第一个是<code>"</code>,第二个是<code>http://test.com</code>,可以通过这个表达式来达到替换链接的目的。而<code>#{Digest::SHA1.hexdigest($2+time.to_s)[8..16]}</code>可以对url地址进行一个转换，得到一个9位的字符串，通过这个算法确保url被转换成短地址的唯一性和随机性。
最后，link_hash就是原来链接和短链接的对应关系，content中的链接已经被短链接所替代。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu服务器上通过cron定时备份rails应用的数据库]]></title>
    <link href="http://irubi.github.io/blog/2011/11/22/ubuntufu-wu-qi-shang-tong-guo-cronding-shi-bei-fen-railsying-yong-de-shu-ju-ku/"/>
    <updated>2011-11-22T12:26:00+08:00</updated>
    <id>http://irubi.github.io/blog/2011/11/22/ubuntufu-wu-qi-shang-tong-guo-cronding-shi-bei-fen-railsying-yong-de-shu-ju-ku</id>
    <content type="html"><![CDATA[<h2 id="section">方案描述：</h2>

<p>用cron每天凌晨2：00自动备份MySQL数据库，文件名以数据库名为前缀紧跟当天的年月日命名（例如project_production2011-12-27.sql），备份后自动删除前六天的备份
<!--more-->
####示例</p>

<p>1.ssh登陆远程服务器</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">ssh username@host_address
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>2.建立目录</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">username@hostname:~<span class="nv">$ </span>mkdir dbbak
</span><span class="line">username@hostname:~<span class="nv">$ </span>mkdir dbbak/project_db
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>3.编辑命令文本</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">username@hostname:~/dbbak<span class="nv">$ </span>nano dbbak.sh
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>内容：</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">DBbinPath</span><span class="o">=</span>/usr/bin/
</span><span class="line"><span class="nv">DBName</span><span class="o">=</span>project_production
</span><span class="line"><span class="nv">BackupPath</span><span class="o">=</span>/home/username/dbbak/project_db
</span><span class="line">
</span><span class="line">mysqldump --user<span class="o">=</span><span class="s2">&quot;db_username&quot;</span> --password<span class="o">=</span><span class="s2">&quot;db_password&quot;</span> <span class="k">${</span><span class="nv">DBName</span><span class="k">}</span> &gt; <span class="k">${</span><span class="nv">BackupPath</span><span class="k">}</span><span class="s2">&quot;/&quot;</span><span class="k">${</span><span class="nv">DBName</span><span class="k">}</span><span class="sb">`</span>date <span class="s2">&quot;+%Y-%m-%d&quot;</span><span class="sb">`</span><span class="s2">&quot;.sql&quot;</span> ;
</span><span class="line">find <span class="k">${</span><span class="nv">BackupPath</span><span class="k">}</span><span class="s2">&quot;/&quot;</span> -mtime +6 -exec rm <span class="o">{}</span> <span class="se">\;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>4.执行测试一下</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">
</span><span class="line">sudo sh dbbak.sh
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>5.在root下添加cron</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">ssh root@hostname
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>6.编辑cron任务</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">root@hostname:~<span class="nv">$ </span>crontab -e
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>内容：</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">0 2 * * * <span class="sb">`</span>sh /home/username/dbbak/dbbak.sh<span class="sb">`</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails中执行rb脚本]]></title>
    <link href="http://irubi.github.io/blog/2011/05/30/railszhong-zhi-xing-rbjiao-ben/"/>
    <updated>2011-05-30T12:27:00+08:00</updated>
    <id>http://irubi.github.io/blog/2011/05/30/railszhong-zhi-xing-rbjiao-ben</id>
    <content type="html"><![CDATA[<p>有时候需要在rails中写一段能在console里执行的小脚本来实现某些功能，具体做法是，在script目录下新建脚本文件test.rb,
在test.rb中写脚本内容：
<!--more--></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>/script/test.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="no">FILE</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;/../config/environment&#39;</span>
</span><span class="line"><span class="c1"># SOME RUBY CODE...</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>执行命令：</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">script/rails runner -e production script/test.rb
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>-e production</code>参数是执行时的环境设定，如果是<code>development</code>环境可省略</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cardinality在数据模型中的意思]]></title>
    <link href="http://irubi.github.io/blog/2009/10/13/cardinalityzai-shu-ju-mo-xing-zhong-de-yi-si/"/>
    <updated>2009-10-13T12:31:00+08:00</updated>
    <id>http://irubi.github.io/blog/2009/10/13/cardinalityzai-shu-ju-mo-xing-zhong-de-yi-si</id>
    <content type="html"><![CDATA[<p>最近在翻译一本数据库的教材，碰到Cardinality这个词，这个词在许多国内的数据库教材中不常见。查了一下英文资料觉得很有必要翻一下，原文内容如下：</p>

<blockquote>
  <p>Cardinality defines the numeric relationships between occurrences of the entities on either end of the relationship line.</p>
</blockquote>

<!--more-->
<p>下面是一些实例:</p>

<ul>
  <li>
    <p><code>LINK</code> 这是0：0可选的关系，这样表达的意思就是：一个person可以占用一个停车位（parking space），但是没必要一个person有一个停车位，也没必要一个停车位必须有一个人。虽然这个概念很简单，但是在数据库中实现却并不直接。你可能得令一个实体作为主表，使用触发器或者程序来限制在另一张表里关联的记录数目。</p>
  </li>
  <li>
    <p><code>SubType</code> 这是1：0的关系；只有一方有选择性。意思就是说一个人可能是一个程序员，那么一个程序员一定是一个人。关系中强制方必须作为主表。跟前面一样，用触发器和程序来控制数据库。</p>
  </li>
  <li>
    <p><code>Physical Segment</code> 这是1：1的强制型关系。一个人必须有且仅有一个DNA序列，一个DNA序列也必须对应且仅对应一个人。 </p>
  </li>
  <li>
    <p><code>Possession</code> 这是0：M（0对多）的可选型关系，意思就是一个人可能有0个电话，1个，或多个电话；某个电话可能没有主人，但是最多只能属于一个人。数据库里的实现方式：在phone表里设置一个可以为空的外键列，用这个列来关联person表。</p>
  </li>
  <li>
    <p><code>Child</code> 这是1：M的强制型关系，这是在数据库里最常见的一种关系类型，一个人可能是或者不是一个会员，但是有可能对应好几个club的会员（假如member实体表述的是多个club里的所有会员记录），毫无疑问，一个会员必须是一个人。数据库里，会员表必须有一个强制不为空的外键。实现二实体间的关联。</p>
  </li>
</ul>

<p>这个例子不太好，假设所有人的名字不重复。</p>

<ul>
  <li>
    <p><code>Characteristic</code> 这是0：M的关联，在M的一端是强制性的。这意思是说，一个人必须有至少一个名字，可以有多个名字，一个名字可能属于某一个人（或没主人）。在数据库里，可以再name表里设置一个可以为空的外键指向person表，使用触发器或者程序来强制一个person必须至少有一个名字。</p>
  </li>
  <li>
    <p><code>Paradox</code> 这是1：M实体两边都是强制型的关系。</p>
  </li>
  <li>
    <p><code>Association</code> 这是M：M（多对多）的可选型关系。概念上是这样的：一个人可以选择为0个，1个或多个老板工作，一个老板可以有0个，1个或多个员工。一般对于M：M这种多对多关系在数据库里面拆分成两个0：M的关系。中间实体表名可以叫做employee，因为它是用来将person实体联系到老板实体的。</p>
  </li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[约瑟夫环Ruby算法]]></title>
    <link href="http://irubi.github.io/blog/2009/03/19/yue-se-fu-huan-rubysuan-fa/"/>
    <updated>2009-03-19T11:15:00+08:00</updated>
    <id>http://irubi.github.io/blog/2009/03/19/yue-se-fu-huan-rubysuan-fa</id>
    <content type="html"><![CDATA[<p>N个人排成一圈，编号为1～n。
从1号开始报数，当报到M时，该位置的人出局，余下的人依然是一个圈，从下一个人开始报数（从1开始），再到第M个出局。</p>

<p>输入n和m,输出这个出局序列</p>

<p>RUBY代码:</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">circle</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="n">m</span><span class="p">)</span>
</span><span class="line">  <span class="n">arr</span><span class="o">=</span><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.n</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span>
</span><span class="line">  <span class="n">i</span><span class="o">=</span><span class="mi">0</span>
</span><span class="line">  <span class="k">while</span> <span class="n">arr</span><span class="o">.</span><span class="n">length</span><span class="o">&gt;</span><span class="mi">0</span>
</span><span class="line">    <span class="n">x</span><span class="o">=</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="n">arr</span><span class="o">.</span><span class="n">length</span>
</span><span class="line">    <span class="nb">puts</span> <span class="n">arr</span><span class="o">[</span><span class="n">x</span><span class="o">]</span>
</span><span class="line">
</span><span class="line">    <span class="n">arr</span><span class="o">.</span><span class="n">delete_at</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</span><span class="line">    <span class="n">i</span><span class="o">=</span><span class="n">x</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="nb">puts</span> <span class="s2">&quot;input n and m: [eg:12,5]&quot;</span>
</span><span class="line"><span class="n">n</span><span class="p">,</span><span class="n">m</span><span class="o">=</span><span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span>
</span><span class="line"><span class="n">circle</span><span class="p">(</span><span class="n">n</span><span class="o">.</span><span class="n">to_i</span><span class="p">,</span><span class="n">m</span><span class="o">.</span><span class="n">to_i</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用Ruby和C实现的算法若干]]></title>
    <link href="http://irubi.github.io/blog/2009/03/09/yong-rubyhe-cshi-xian-de-suan-fa-ruo-gan/"/>
    <updated>2009-03-09T10:13:00+08:00</updated>
    <id>http://irubi.github.io/blog/2009/03/09/yong-rubyhe-cshi-xian-de-suan-fa-ruo-gan</id>
    <content type="html"><![CDATA[<blockquote>
  <p>算法1：题目：有1、2、3、4个数字，能组成多少个互不相同且无重复数字 的三位数？都是多少？
排列组合的问题</p>
</blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">class</span> <span class="nc">Array</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">perm</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class="line">    <span class="k">if</span> <span class="n">size</span> <span class="o">&lt;</span> <span class="n">n</span> <span class="ow">or</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="mi">0</span>
</span><span class="line">    <span class="k">elsif</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class="line">      <span class="k">yield</span><span class="p">(</span><span class="o">[]</span><span class="p">)</span>
</span><span class="line">    <span class="k">else</span>
</span><span class="line">      <span class="nb">self</span><span class="o">[</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">1</span><span class="o">].</span><span class="n">perm</span><span class="p">(</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class="line">        <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">n</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class="line">          <span class="k">yield</span><span class="p">(</span><span class="n">x</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">i</span><span class="o">]</span> <span class="o">+</span> <span class="o">[</span><span class="n">first</span><span class="o">]</span> <span class="o">+</span> <span class="n">x</span><span class="o">[</span><span class="n">i</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span><span class="p">)</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">      <span class="nb">self</span><span class="o">[</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">1</span><span class="o">].</span><span class="n">perm</span><span class="p">(</span><span class="n">n</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class="line">        <span class="k">yield</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">quantity</span><span class="o">=</span><span class="mi">0</span>
</span><span class="line"><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="o">].</span><span class="n">perm</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class="line">  <span class="n">quantity</span><span class="o">+=</span><span class="mi">1</span>
</span><span class="line">  <span class="nb">p</span> <span class="n">x</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line"><span class="nb">p</span> <span class="n">quantity</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<hr />

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#include &quot;stdio.h&quot; </span>
</span><span class="line"><span class="cp">#define MAX 3 </span>
</span><span class="line"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line"> <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">,</span><span class="n">k</span><span class="p">;</span>
</span><span class="line"> <span class="kt">int</span> <span class="n">num</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line"> <span class="kt">int</span> <span class="n">a</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span>
</span><span class="line"> <span class="kt">int</span> <span class="n">newline</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line"> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line"> <span class="k">while</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">MAX</span><span class="p">)</span>
</span><span class="line"> <span class="p">{</span>
</span><span class="line">     <span class="n">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="n">i</span><span class="p">;</span>
</span><span class="line">     <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">     <span class="k">while</span><span class="p">(</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">MAX</span><span class="p">)</span>
</span><span class="line">         <span class="p">{</span>
</span><span class="line">        <span class="k">if</span><span class="p">(</span><span class="n">j</span><span class="o">==</span><span class="n">i</span><span class="p">)</span>     <span class="p">{</span><span class="n">j</span><span class="o">++</span><span class="p">;</span> <span class="k">continue</span><span class="p">;}</span>
</span><span class="line">        <span class="n">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="n">j</span><span class="p">;</span>
</span><span class="line">        <span class="n">k</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">        <span class="k">while</span><span class="p">(</span><span class="n">k</span><span class="o">&lt;=</span><span class="n">MAX</span><span class="p">)</span>
</span><span class="line">         <span class="p">{</span>
</span><span class="line">         <span class="k">if</span><span class="p">(</span><span class="n">k</span><span class="o">==</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span><span class="n">k</span><span class="o">++</span><span class="p">;</span><span class="k">continue</span><span class="p">;}</span>
</span><span class="line">         <span class="k">if</span><span class="p">(</span><span class="n">k</span><span class="o">==</span><span class="n">j</span><span class="p">)</span> <span class="p">{</span><span class="n">k</span><span class="o">++</span><span class="p">;</span><span class="k">continue</span><span class="p">;}</span>
</span><span class="line">            <span class="n">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="n">k</span><span class="p">;</span>
</span><span class="line">            <span class="n">k</span><span class="o">++</span><span class="p">;</span>
</span><span class="line">            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">temp</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">temp</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span><span class="n">temp</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="n">a</span><span class="p">[</span><span class="n">temp</span><span class="p">]);</span>
</span><span class="line">     <span class="n">printf</span><span class="p">(</span><span class="s">&quot;    &quot;</span><span class="p">);</span>
</span><span class="line">            <span class="n">num</span><span class="o">++</span><span class="p">;</span>
</span><span class="line">            <span class="n">newline</span><span class="o">++</span><span class="p">;</span>
</span><span class="line">            <span class="k">if</span><span class="p">(</span><span class="n">newline</span><span class="o">%</span><span class="mi">10</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line">                <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class="line">         <span class="p">}</span><span class="c1">//while k </span>
</span><span class="line">        <span class="n">j</span><span class="o">++</span><span class="p">;</span>
</span><span class="line">     <span class="p">}</span><span class="c1">//while j </span>
</span><span class="line">             <span class="n">i</span><span class="o">++</span><span class="p">;</span>
</span><span class="line">        <span class="p">}</span><span class="c1">//while i </span>
</span><span class="line">
</span><span class="line"> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">Total number is %d&quot;</span><span class="p">,</span><span class="n">num</span><span class="p">);</span>
</span><span class="line"> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /></p>

<blockquote>
  <p>题目2：
验证谷角猜想。日本数学家谷角静夫在研究自然数时发现了一个奇怪现象：对于任意一个自然数 n ，若 n 为偶数，则将其除以 2 ;若 n 为奇数，则将其乘以 3 ，然后再加 1 。如此经过有限次运算后，总可以得到自然数 1 。人们把谷角静夫的这一发现叫做“谷角猜想”。 
编写一个程序，由键盘输入一个自然数 n ，把 n 经过有限次运算后，最终变成自然数 1 的全过程打印出来 </p>
</blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">gu</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class="line">    <span class="k">if</span> <span class="n">n</span><span class="o">==</span><span class="mi">0</span>
</span><span class="line">        <span class="nb">print</span> <span class="s2">&quot;Invalid number!&quot;</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="k">while</span> <span class="n">n!</span><span class="o">=</span><span class="mi">1</span>
</span><span class="line">        <span class="k">if</span> <span class="n">n</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span>
</span><span class="line">            <span class="k">yield</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class="line">            <span class="n">n</span><span class="o">=</span><span class="n">n</span><span class="o">/</span><span class="mi">2</span>
</span><span class="line">        <span class="k">elsif</span> <span class="n">n</span><span class="o">%</span><span class="mi">2</span><span class="o">!=</span><span class="mi">0</span>
</span><span class="line">            <span class="k">yield</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class="line">            <span class="n">n</span><span class="o">=</span><span class="n">n</span><span class="o">*</span><span class="mi">3</span><span class="o">+</span><span class="mi">1</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="nb">print</span> <span class="n">n</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="nb">puts</span> <span class="s2">&quot;Input an Integer(except 0): &quot;</span>
</span><span class="line">
</span><span class="line"><span class="n">n</span><span class="o">=</span><span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="o">.</span><span class="n">to_i</span>
</span><span class="line"><span class="n">gu</span><span class="p">(</span><span class="n">n</span><span class="p">)</span> <span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="nb">print</span> <span class="n">x</span><span class="p">,</span> <span class="s2">&quot; &quot;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /></p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#include &quot;stdio.h&quot; </span>
</span><span class="line"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">n</span><span class="p">;</span>
</span><span class="line">        <span class="kt">int</span> <span class="n">newline</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="nl">loop1:</span>
</span><span class="line">  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Please input the natural number(&gt;=1):&quot;</span><span class="p">);</span>
</span><span class="line">  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">);</span>
</span><span class="line">  <span class="k">if</span><span class="p">(</span><span class="n">n</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Invalid number</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class="line">    <span class="k">goto</span> <span class="n">loop1</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="k">while</span><span class="p">(</span><span class="n">n</span><span class="o">!=</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="k">if</span><span class="p">(</span><span class="n">n</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">      <span class="n">n</span><span class="o">=</span><span class="n">n</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
</span><span class="line">      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d    &quot;</span><span class="p">,</span><span class="n">n</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="k">else</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">      <span class="n">n</span><span class="o">=</span><span class="n">n</span><span class="o">*</span><span class="mi">3</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d &quot;</span><span class="p">,</span><span class="n">n</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="n">newline</span><span class="o">++</span><span class="p">;</span>
</span><span class="line">    <span class="k">if</span><span class="p">(</span><span class="n">newline</span><span class="o">%</span><span class="mi">10</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">The total execute number is %d&quot;</span><span class="p">,</span><span class="n">newline</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /></p>

<blockquote>
  <p>题目3：
从键盘上输入某年某月某日，计算是这一年中的第几天</p>
</blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">printf</span> <span class="s2">&quot;Input a date: (format:2009.2.14)&quot;</span>
</span><span class="line"><span class="n">time_arr</span><span class="o">=</span><span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span>
</span><span class="line"><span class="n">time</span><span class="o">=</span><span class="no">Time</span><span class="o">.</span><span class="n">mktime</span><span class="p">(</span><span class="n">time_arr</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">to_i</span><span class="p">,</span><span class="n">time_arr</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">to_i</span><span class="p">,</span><span class="n">time_arr</span><span class="o">[</span><span class="mi">2</span><span class="o">].</span><span class="n">to_i</span><span class="p">,)</span>
</span><span class="line"><span class="n">time</span><span class="o">.</span><span class="n">yday</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#include &quot;stdio.h&quot; </span>
</span><span class="line"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">year</span><span class="p">,</span><span class="n">month</span><span class="p">,</span><span class="n">day</span><span class="p">;</span>
</span><span class="line">  <span class="kt">int</span>    <span class="n">i</span><span class="p">;</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">total</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">a</span><span class="p">[</span><span class="mi">12</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="mi">31</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">30</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">30</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">30</span><span class="p">,</span><span class="mi">31</span><span class="p">,</span><span class="mi">30</span><span class="p">,</span><span class="mi">31</span><span class="p">};</span>
</span><span class="line">  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Please input the date of today:(yyyy,mm,dd)&quot;</span><span class="p">);</span>
</span><span class="line">  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d,%d,%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">year</span><span class="p">,</span><span class="o">&amp;</span><span class="n">month</span><span class="p">,</span><span class="o">&amp;</span><span class="n">day</span><span class="p">);</span>
</span><span class="line">  <span class="k">if</span><span class="p">(</span> <span class="n">year</span><span class="o">%</span><span class="mi">400</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</span><span class="line">            <span class="n">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="mi">29</span><span class="p">;</span>
</span><span class="line">  <span class="k">else</span>
</span><span class="line">     <span class="n">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="mi">28</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">        <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">month</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">    <span class="n">total</span><span class="o">+=</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class="line">  <span class="n">total</span><span class="o">+=</span><span class="n">day</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">Today is number %d day in this year.&quot;</span><span class="p">,</span><span class="n">total</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /></p>

<blockquote>
  <p>题目4：
输入n，打印n阶楼梯，最上层楼梯有两个笑脸</p>
</blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">stairs</span><span class="p">(</span><span class="n">max</span><span class="p">)</span>
</span><span class="line">    <span class="n">f</span><span class="o">=</span><span class="n">max</span>
</span><span class="line">    <span class="k">while</span> <span class="n">f!</span><span class="o">=</span><span class="mi">0</span>
</span><span class="line">        <span class="k">yield</span> <span class="n">f</span>
</span><span class="line">        <span class="n">f</span><span class="o">-=</span><span class="mi">1</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="mi">10</span><span class="o">.</span><span class="n">times</span> <span class="p">{</span><span class="nb">print</span> <span class="s2">&quot;     &quot;</span><span class="p">}</span>
</span><span class="line"><span class="nb">print</span> <span class="s2">&quot;</span><span class="se">\1</span><span class="s2">    </span><span class="se">\1\n</span><span class="s2">&quot;</span>
</span><span class="line"><span class="n">stairs</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class="line">    <span class="p">(</span><span class="n">f</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
</span><span class="line">        <span class="nb">print</span> <span class="s2">&quot;     &quot;</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="nb">print</span> <span class="s2">&quot;_|&quot;</span>
</span><span class="line"><span class="nb">print</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /> </p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#include &quot;stdio.h&quot; </span>
</span><span class="line"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">;</span>
</span><span class="line">  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\1</span><span class="s"> </span><span class="se">\1\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class="line">  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">11</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">i</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">      <span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">==</span><span class="n">j</span><span class="p">)</span>
</span><span class="line">        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;|_&quot;</span><span class="p">);</span>
</span><span class="line">      <span class="k">else</span>
</span><span class="line">        <span class="n">printf</span><span class="p">(</span><span class="s">&quot; &quot;</span><span class="p">);</span>
</span><span class="line">         <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /> </p>

<blockquote>
  <p>题目5：
一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请问该数是多少？</p>
</blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">x</span><span class="o">=</span><span class="mi">17</span>
</span><span class="line"><span class="k">while</span> <span class="n">x</span><span class="o">&lt;</span><span class="mi">1000</span>
</span><span class="line">    <span class="n">y</span><span class="o">=</span><span class="mi">10</span>
</span><span class="line">    <span class="k">while</span> <span class="n">y</span><span class="o">&lt;</span><span class="mi">1000</span>
</span><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="n">y</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="n">y</span><span class="p">)</span><span class="o">==</span><span class="mi">168</span>
</span><span class="line">            <span class="nb">puts</span>    <span class="n">x</span><span class="o">*</span><span class="n">x</span><span class="o">-</span><span class="mi">100</span>
</span><span class="line">            <span class="k">break</span>
</span><span class="line">        <span class="k">else</span>
</span><span class="line">            <span class="n">y</span><span class="o">+=</span><span class="mi">1</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="n">x</span><span class="o">+=</span><span class="mi">1</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /></p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="c"><span class="line">
</span><span class="line">
</span><span class="line"><span class="cp">#include &quot;stdio.h&quot; </span>
</span><span class="line"><span class="cp">#include &quot;math.h&quot; </span>
</span><span class="line"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">m</span><span class="p">,</span><span class="n">n</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">  <span class="k">for</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">x</span><span class="o">&lt;</span><span class="mi">100</span><span class="p">;</span><span class="n">x</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="n">m</span><span class="o">=</span><span class="n">sqrt</span><span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="mi">100</span><span class="p">);</span>
</span><span class="line">          <span class="n">n</span><span class="o">=</span><span class="n">sqrt</span><span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="mi">268</span><span class="p">);</span>
</span><span class="line">    <span class="k">if</span><span class="p">(</span> <span class="p">(</span><span class="n">m</span><span class="o">*</span><span class="n">m</span><span class="o">==</span><span class="n">x</span><span class="o">+</span><span class="mi">100</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">n</span><span class="o">*</span><span class="n">n</span><span class="o">==</span><span class="n">x</span><span class="o">+</span><span class="mi">268</span><span class="p">)</span> <span class="p">)</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="n">x</span><span class="p">);</span>
</span><span class="line">      <span class="k">break</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /></p>

<blockquote>
  <p>题目6：
有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？</p>
</blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1">##3个月大开始生兔子是fib序列。</span>
</span><span class="line"><span class="k">class</span> <span class="nc">Rabbit</span>
</span><span class="line">    <span class="vc">@@count</span><span class="o">=</span><span class="mi">0</span>
</span><span class="line">    <span class="kp">attr_accessor</span> <span class="ss">:age</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">initialize</span>
</span><span class="line">        <span class="vi">@age</span><span class="o">=</span><span class="mi">0</span>
</span><span class="line">        <span class="vc">@@count</span><span class="o">+=</span><span class="mi">1</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">increment</span>
</span><span class="line">        <span class="vi">@age</span><span class="o">+=</span><span class="mi">1</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">quantity</span>
</span><span class="line">        <span class="vc">@@count</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">first_rabbit</span><span class="o">=</span><span class="no">Rabbit</span><span class="o">.</span><span class="n">new</span>
</span><span class="line"><span class="n">rabbits</span><span class="o">=</span><span class="nb">Array</span><span class="o">.</span><span class="n">new</span>
</span><span class="line"><span class="n">rabbits</span><span class="o">&lt;&lt;</span><span class="n">first_rabit</span>
</span><span class="line"><span class="nb">puts</span> <span class="s2">&quot;Input the months:&quot;</span>
</span><span class="line"><span class="n">n</span><span class="o">=</span><span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="o">.</span><span class="n">to_i</span>
</span><span class="line"><span class="n">n</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">month</span><span class="o">|</span>
</span><span class="line">    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">month</span><span class="si">}</span><span class="s2"> -- </span><span class="si">#{</span><span class="no">Rabbit</span><span class="o">.</span><span class="n">quantity</span><span class="o">*</span><span class="mi">2</span><span class="si">}</span><span class="s2"> rabbits&quot;</span>
</span><span class="line">    <span class="n">rabits</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">rabbit</span><span class="o">|</span>
</span><span class="line">        <span class="n">rabbit</span><span class="o">.</span><span class="n">increment</span>
</span><span class="line">        <span class="k">if</span> <span class="n">rabbit</span><span class="o">.</span><span class="n">age</span><span class="o">&gt;=</span><span class="mi">3</span>
</span><span class="line">            <span class="n">rabbits</span><span class="o">&lt;&lt;</span><span class="no">Rabit</span><span class="o">.</span><span class="n">new</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /></p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">fib</span><span class="p">(</span><span class="n">month</span><span class="p">)</span>
</span><span class="line">  <span class="n">f1</span><span class="p">,</span><span class="n">f2</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span>
</span><span class="line">  <span class="mi">100</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
</span><span class="line">    <span class="k">yield</span><span class="p">(</span><span class="n">f1</span><span class="p">)</span>
</span><span class="line">    <span class="n">f1</span><span class="p">,</span><span class="n">f2</span><span class="o">=</span><span class="n">f1</span><span class="o">+</span><span class="n">f2</span><span class="p">,</span><span class="n">f1</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">n</span><span class="o">=</span><span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="o">.</span><span class="n">to_i</span>
</span><span class="line"><span class="n">fib</span><span class="p">(</span><span class="n">n</span><span class="p">){</span><span class="o">|</span><span class="n">x</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">x</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /></p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#include &quot;stdio.h&quot; </span>
</span><span class="line"><span class="cp">#include &quot;math.h&quot; </span>
</span><span class="line">
</span><span class="line"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">month</span><span class="p">;</span>
</span><span class="line">  <span class="c1">//long int num=1;                            //the number of rabbits </span>
</span><span class="line">  <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>                                    <span class="c1">//loop variable </span>
</span><span class="line">  <span class="kt">int</span> <span class="n">f1</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">f2</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Which month would you want to konw how many rabbits ?&quot;</span><span class="p">);</span>
</span><span class="line">  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">month</span><span class="p">);</span>
</span><span class="line">        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;1----1 pair of rabbit</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class="line">  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;2----1 pairs of rabbits</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class="line">        <span class="n">i</span><span class="o">=</span><span class="mi">3</span><span class="p">;</span>
</span><span class="line">  <span class="k">while</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">month</span><span class="p">)</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">
</span><span class="line">    <span class="n">f1</span><span class="o">=</span><span class="n">f1</span><span class="o">+</span><span class="n">f2</span><span class="p">;</span>
</span><span class="line">    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d----%d pairs of rabbits</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">f1</span><span class="p">);</span>
</span><span class="line">    <span class="n">f2</span><span class="o">=</span><span class="n">f1</span><span class="o">+</span><span class="n">f2</span><span class="p">;</span>
</span><span class="line">    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d----%d pairs of rabbits</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="o">++</span><span class="n">i</span><span class="p">,</span><span class="n">f2</span><span class="p">);</span>
</span><span class="line">    <span class="n">i</span><span class="o">++</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="c1">//printf(&quot;\nThe %d month has %d number rabbits.\n&quot;,month,num);         </span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /></p>

<blockquote>
  <p>题目7:
打印出所有的“水仙花数”，所谓“水仙花数”是指一个三位数，其各位数字立方和等于该数本身。例如：153是一个“水仙花数”，因为153=1的三次方＋5的三次方＋3的三次方。</p>
</blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">daffodil</span>
</span><span class="line">    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">9</span><span class="p">)</span>
</span><span class="line">        <span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">9</span><span class="p">)</span>
</span><span class="line">            <span class="k">for</span> <span class="n">k</span> <span class="k">in</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">9</span><span class="p">)</span>
</span><span class="line">                <span class="n">x</span><span class="o">=</span><span class="n">i</span><span class="o">*</span><span class="mi">100</span><span class="o">+</span><span class="n">j</span><span class="o">*</span><span class="mi">10</span><span class="o">+</span><span class="n">k</span>
</span><span class="line">                <span class="n">y</span><span class="o">=</span><span class="n">i</span><span class="o">**</span><span class="mi">3</span><span class="o">+</span><span class="n">j</span><span class="o">**</span><span class="mi">3</span><span class="o">+</span><span class="n">k</span><span class="o">**</span><span class="mi">3</span>
</span><span class="line">                <span class="k">if</span> <span class="n">x</span><span class="o">==</span><span class="n">y</span>
</span><span class="line">                    <span class="nb">puts</span> <span class="n">x</span>
</span><span class="line">                <span class="k">else</span>
</span><span class="line">                    <span class="n">k</span><span class="o">+=</span><span class="mi">1</span>
</span><span class="line">                <span class="k">end</span>
</span><span class="line">            <span class="k">end</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line"><span class="n">daffodil</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /></p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#include &quot;stdio.h&quot; </span>
</span><span class="line"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">     <span class="kt">int</span> <span class="n">hundreds</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">     <span class="kt">int</span> <span class="n">tens</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">     <span class="kt">int</span> <span class="n">units</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">     <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">num</span><span class="p">;</span>    <span class="c1">//loop variable </span>
</span><span class="line">     <span class="kt">int</span> <span class="n">temp_num</span><span class="p">;</span>
</span><span class="line">     <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">111</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="mi">999</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">     <span class="p">{</span>
</span><span class="line">        <span class="n">num</span><span class="o">=</span><span class="n">i</span><span class="p">;</span>
</span><span class="line">        <span class="n">units</span><span class="o">=</span><span class="n">num</span><span class="o">%</span><span class="mi">10</span><span class="p">;</span>
</span><span class="line">        <span class="n">num</span><span class="o">=</span><span class="n">num</span><span class="o">/</span><span class="mi">10</span><span class="p">;</span>
</span><span class="line">        <span class="n">tens</span><span class="o">=</span><span class="n">num</span><span class="o">%</span><span class="mi">10</span><span class="p">;</span>
</span><span class="line">        <span class="n">num</span><span class="o">=</span><span class="n">num</span><span class="o">/</span><span class="mi">10</span><span class="p">;</span>
</span><span class="line">        <span class="n">hundreds</span><span class="o">=</span><span class="n">num</span><span class="o">%</span><span class="mi">10</span><span class="p">;</span>
</span><span class="line">        <span class="n">temp_num</span><span class="o">=</span><span class="n">hundreds</span><span class="o">*</span><span class="n">hundreds</span><span class="o">*</span><span class="n">hundreds</span><span class="o">+</span><span class="n">tens</span><span class="o">*</span><span class="n">tens</span><span class="o">*</span><span class="n">tens</span><span class="o">+</span><span class="n">units</span><span class="o">*</span><span class="n">units</span><span class="o">*</span><span class="n">units</span><span class="p">;</span>
</span><span class="line">        <span class="k">if</span><span class="p">(</span><span class="n">temp_num</span><span class="o">==</span><span class="n">i</span><span class="p">)</span>
</span><span class="line">         <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d    &quot;</span><span class="p">,</span><span class="n">i</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">     <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /></p>

<blockquote>
  <p>题目8：将一个正整数分解质因数。例如：输入90,打印出90= 2*3*3*5。</p>
</blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">sub</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class="line">    <span class="n">a</span><span class="o">=</span><span class="nb">Array</span><span class="o">.</span><span class="n">new</span>
</span><span class="line">    <span class="n">flag</span><span class="o">=</span><span class="mi">1</span>
</span><span class="line">    <span class="k">while</span> <span class="n">flag</span><span class="o">==</span><span class="mi">1</span>
</span><span class="line">        <span class="k">for</span> <span class="n">i</span> <span class="k">in</span><span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="n">.n</span><span class="p">)</span>
</span><span class="line">            <span class="k">if</span> <span class="n">n</span><span class="o">%</span><span class="n">i</span><span class="o">==</span><span class="mi">0</span>
</span><span class="line">                <span class="n">a</span><span class="o">&lt;&lt;</span><span class="n">i</span>
</span><span class="line">                <span class="n">n</span><span class="o">=</span><span class="n">n</span><span class="o">/</span><span class="n">i</span>
</span><span class="line">                <span class="k">break</span>
</span><span class="line">            <span class="k">end</span>
</span><span class="line">            <span class="k">if</span> <span class="n">i</span><span class="o">==</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span> <span class="ow">and</span> <span class="n">n</span><span class="o">%</span><span class="n">i!</span><span class="o">=</span><span class="mi">0</span>
</span><span class="line">                <span class="n">flag</span><span class="o">=</span><span class="mi">0</span>
</span><span class="line">            <span class="k">end</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="n">a</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line"><span class="nb">puts</span> <span class="s2">&quot;Input a number:&quot;</span>
</span><span class="line"><span class="n">n</span><span class="o">=</span><span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="o">.</span><span class="n">to_i</span>
</span><span class="line"><span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">n</span><span class="si">}</span><span class="s2">=</span><span class="si">#{</span><span class="nb">sub</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;*&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /></p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#include &quot;stdio.h&quot; </span>
</span><span class="line"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">num</span><span class="p">;</span>
</span><span class="line"><span class="nl">loop1:</span>
</span><span class="line">  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Please input your number which want to factorization:</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class="line">  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">num</span><span class="p">);</span>
</span><span class="line">  <span class="k">if</span><span class="p">(</span><span class="n">num</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;1 cannot    Integer factorization </span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class="line">    <span class="k">goto</span> <span class="n">loop1</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="k">while</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">num</span><span class="p">)</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="k">if</span><span class="p">(</span> <span class="n">num</span><span class="o">%</span><span class="n">i</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">)</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="n">i</span><span class="p">);</span>
</span><span class="line">      <span class="k">if</span><span class="p">(</span><span class="n">num</span><span class="o">!=</span><span class="n">i</span><span class="p">)</span>
</span><span class="line">        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;*&quot;</span><span class="p">);</span>
</span><span class="line">      <span class="k">if</span><span class="p">(</span><span class="n">num</span><span class="o">==</span><span class="n">i</span><span class="p">)</span>
</span><span class="line">         <span class="k">break</span><span class="p">;</span>
</span><span class="line">      <span class="n">num</span><span class="o">=</span><span class="n">num</span><span class="o">/</span><span class="n">i</span><span class="p">;</span>
</span><span class="line">      <span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="k">else</span>
</span><span class="line">      <span class="n">i</span><span class="o">++</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /></p>

<blockquote>
  <p>题目9：
求两个数的最小公倍数和最大公因数</p>
</blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">puts</span> <span class="s2">&quot;Input two numbers( split with &quot;</span><span class="p">,</span><span class="s2">&quot;):&quot;</span>
</span><span class="line"><span class="n">b</span><span class="o">=</span><span class="nb">Array</span><span class="o">.</span><span class="n">new</span>
</span><span class="line"><span class="n">a</span><span class="o">=</span><span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">)</span>
</span><span class="line"><span class="n">a</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">elem</span><span class="o">|</span>
</span><span class="line">    <span class="n">b</span><span class="o">&lt;&lt;</span><span class="n">elem</span><span class="o">.</span><span class="n">to_i</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line"><span class="n">min_number</span><span class="o">=</span><span class="n">b</span><span class="o">.</span><span class="n">min</span>
</span><span class="line"><span class="n">max_number</span><span class="o">=</span><span class="n">b</span><span class="o">.</span><span class="n">max</span>
</span><span class="line">
</span><span class="line"><span class="n">common_divisor</span><span class="o">=</span><span class="mi">1</span>
</span><span class="line"><span class="n">common_multiple</span><span class="o">=</span><span class="n">min_number</span><span class="o">*</span><span class="n">max_number</span>
</span><span class="line"><span class="n">min_number</span><span class="o">.</span><span class="n">downto</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class="line">    <span class="k">if</span> <span class="n">min_number</span><span class="o">%</span><span class="n">i</span><span class="o">==</span><span class="mi">0</span> <span class="ow">and</span> <span class="n">max_number</span><span class="o">%</span><span class="n">i</span><span class="o">==</span><span class="mi">0</span>
</span><span class="line">        <span class="n">common_divisor</span><span class="o">=</span><span class="n">i</span>
</span><span class="line">        <span class="k">break</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">max_number</span><span class="o">.</span><span class="n">upto</span><span class="p">(</span><span class="n">max_number</span><span class="o">*</span><span class="n">min_number</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class="line">    <span class="k">if</span> <span class="n">i</span><span class="o">%</span><span class="n">min_number</span><span class="o">==</span><span class="mi">0</span> <span class="ow">and</span> <span class="n">i</span><span class="o">%</span><span class="n">max_number</span><span class="o">==</span><span class="mi">0</span>
</span><span class="line">        <span class="n">common_multiple</span><span class="o">=</span><span class="n">i</span>
</span><span class="line">        <span class="k">break</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line"><span class="nb">puts</span> <span class="s2">&quot;The common divisor is </span><span class="si">#{</span><span class="n">common_divisor</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line">
</span><span class="line"><span class="nb">puts</span> <span class="s2">&quot;The common multiple is </span><span class="si">#{</span><span class="n">common_multiple</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /></p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#include &quot;stdio.h&quot; </span>
</span><span class="line"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">num1</span><span class="p">,</span><span class="n">num2</span><span class="p">;</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">temp_num</span><span class="p">;</span>
</span><span class="line">  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Please input num1,num2:&quot;</span><span class="p">);</span>
</span><span class="line">  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d,%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">num1</span><span class="p">,</span><span class="o">&amp;</span><span class="n">num2</span><span class="p">);</span>
</span><span class="line">  <span class="k">if</span><span class="p">(</span><span class="n">num1</span><span class="o">&gt;</span><span class="n">num2</span><span class="p">)</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="n">temp_num</span><span class="o">=</span><span class="n">num1</span><span class="p">;</span>
</span><span class="line">    <span class="n">num1</span><span class="o">=</span><span class="n">num2</span><span class="p">;</span>
</span><span class="line">    <span class="n">num2</span><span class="o">=</span><span class="n">temp_num</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">
</span><span class="line">        <span class="k">if</span><span class="p">(</span><span class="n">num2</span><span class="o">%</span><span class="n">num1</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line">    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;The greatest common divisor is %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">num1</span><span class="p">);</span>
</span><span class="line">  <span class="k">else</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">num1</span><span class="p">;</span><span class="n">i</span><span class="o">&gt;=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">--</span><span class="p">)</span>
</span><span class="line">        <span class="k">if</span><span class="p">(</span> <span class="p">(</span><span class="n">num1</span><span class="o">%</span><span class="n">i</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">num2</span><span class="o">%</span><span class="n">i</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="p">)</span>
</span><span class="line">        <span class="p">{</span>
</span><span class="line">         <span class="n">printf</span><span class="p">(</span><span class="s">&quot;The greatest common divisor is %d    </span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">i</span><span class="p">);</span>
</span><span class="line">         <span class="k">break</span><span class="p">;</span>
</span><span class="line">        <span class="p">}</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">  <span class="k">if</span><span class="p">(</span><span class="n">num2</span><span class="o">%</span><span class="n">num1</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line">    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;The    least common multiple is %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">num2</span><span class="p">);</span>
</span><span class="line">  <span class="k">else</span>
</span><span class="line">    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">num2</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">num1</span><span class="o">*</span><span class="n">num2</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">      <span class="k">if</span><span class="p">(</span> <span class="n">j</span><span class="o">%</span><span class="n">num1</span><span class="o">==</span><span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">j</span><span class="o">%</span><span class="n">num2</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line">      <span class="p">{</span>
</span><span class="line">        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;The least common multiple is %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">j</span><span class="p">);</span>
</span><span class="line">        <span class="k">break</span><span class="p">;</span>
</span><span class="line">      <span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /></p>

<blockquote>
  <p>题目10：求s=a+aa+aaa+aaaa+aa…a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，几个数相加有键盘控制。</p>
</blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">    <span class="n">a</span><span class="o">=</span><span class="nb">Array</span><span class="o">.</span><span class="n">new</span>
</span><span class="line">    <span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class="line">      <span class="n">a</span><span class="o">&lt;&lt;</span><span class="n">i</span><span class="o">.</span><span class="n">to_i</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="n">elem</span><span class="o">=[</span><span class="mi">0</span><span class="o">]</span>
</span><span class="line">    <span class="k">for</span> <span class="n">n</span> <span class="k">in</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.a</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">)</span> <span class="k">do</span>
</span><span class="line">        <span class="n">elem</span><span class="o">[</span><span class="n">n</span><span class="o">]=</span><span class="n">elem</span><span class="o">[</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">]+</span><span class="n">a</span><span class="o">[</span><span class="mi">0</span><span class="o">]*</span><span class="mi">10</span><span class="o">**</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line">        <span class="nb">print</span> <span class="n">elem</span><span class="o">[</span><span class="n">n</span><span class="o">]</span><span class="p">,</span><span class="s2">&quot;+&quot;</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="nb">print</span> <span class="s2">&quot;=</span><span class="si">#{</span><span class="n">elem</span><span class="o">.</span><span class="n">inject</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">sum</span><span class="p">,</span><span class="n">i</span><span class="o">|</span> <span class="n">sum</span><span class="o">+=</span><span class="n">i</span><span class="si">}</span><span class="s2">}&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /> </p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#include &quot;stdio.h&quot; </span>
</span><span class="line"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">
</span><span class="line">  <span class="kt">int</span> <span class="n">a</span><span class="p">;</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">count</span><span class="p">;</span>
</span><span class="line">  <span class="kt">int</span> <span class="o">*</span><span class="n">temp</span><span class="p">;</span> <span class="c1">//有多少个数相加，就分配多大的内存 </span>
</span><span class="line">  <span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">        <span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Please input number a:&quot;</span><span class="p">);</span>
</span><span class="line">  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">a</span><span class="p">);</span>
</span><span class="line">  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Please input the times:&quot;</span><span class="p">);</span>
</span><span class="line">  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">count</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">  <span class="n">temp</span><span class="o">=</span><span class="n">new</span> <span class="kt">int</span><span class="p">[</span><span class="n">count</span><span class="p">];</span>
</span><span class="line">  <span class="n">temp</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="n">a</span><span class="p">;</span>
</span><span class="line">     <span class="k">if</span><span class="p">(</span><span class="n">count</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">     <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="n">a</span><span class="p">);</span>
</span><span class="line">     <span class="k">goto</span> <span class="n">loop1</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="k">for</span><span class="p">(</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">count</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="n">temp</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">temp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="mi">10</span><span class="o">+</span><span class="n">a</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="n">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">         <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">count</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">     <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="n">temp</span><span class="p">[</span><span class="n">j</span><span class="p">]);</span>
</span><span class="line">            <span class="k">if</span><span class="p">(</span><span class="n">j</span><span class="o">!=</span><span class="p">(</span><span class="n">count</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span>
</span><span class="line">         <span class="n">printf</span><span class="p">(</span><span class="s">&quot;+&quot;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">                 <span class="n">a</span><span class="o">+=</span><span class="n">temp</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="nl">loop1:</span> <span class="n">printf</span><span class="p">(</span><span class="s">&quot;=%d&quot;</span><span class="p">,</span><span class="n">a</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /></p>

<blockquote>
  <p>题目11：
一个数如果恰好等于它的因子之和，这个数就称为“完数”。例如6=1＋2＋3.编程找出1000以内的所有完数。</p>
</blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line">    <span class="n">a</span><span class="o">=</span><span class="nb">Array</span><span class="o">.</span><span class="n">new</span>
</span><span class="line">    <span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">1000</span><span class="p">)</span>
</span><span class="line">      <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]=[]</span>
</span><span class="line">      <span class="k">for</span> <span class="n">j</span> <span class="k">in</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.i</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span>
</span><span class="line">        <span class="k">if</span> <span class="n">i</span><span class="o">%</span><span class="n">j</span><span class="o">==</span><span class="mi">0</span>
</span><span class="line">          <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">&lt;&lt;</span> <span class="n">j</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">      <span class="k">if</span> <span class="n">i</span><span class="o">==</span><span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">inject</span><span class="p">(</span><span class="mi">0</span><span class="p">){</span><span class="o">|</span><span class="n">sum</span><span class="p">,</span><span class="n">elem</span><span class="o">|</span> <span class="n">sum</span><span class="o">+=</span><span class="n">elem</span><span class="p">}</span>
</span><span class="line">        <span class="nb">puts</span> <span class="n">i</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /> </p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#include &quot;stdio.h&quot; </span>
</span><span class="line"><span class="cp">#include &quot;math.h&quot; </span>
</span><span class="line"><span class="cp">#define MAX 1000 </span>
</span><span class="line"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">temp</span><span class="p">[</span><span class="n">MAX</span><span class="o">/</span><span class="mi">2</span><span class="p">];</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">sum</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">k</span><span class="p">;</span>
</span><span class="line">  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">m</span><span class="o">&lt;</span><span class="n">MAX</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="n">m</span><span class="o">++</span><span class="p">)</span> <span class="c1">//初始化 </span>
</span><span class="line">    <span class="n">temp</span><span class="p">[</span><span class="n">m</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">MAX</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">floor</span><span class="p">(</span><span class="n">i</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span><span class="n">j</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">      <span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">%</span><span class="n">j</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line">      <span class="p">{</span>
</span><span class="line">        <span class="n">temp</span><span class="p">[</span><span class="n">k</span><span class="p">]</span><span class="o">=</span><span class="n">j</span><span class="p">;</span>
</span><span class="line">        <span class="n">sum</span><span class="o">+=</span><span class="n">j</span><span class="p">;</span>
</span><span class="line">        <span class="n">k</span><span class="o">++</span><span class="p">;</span>
</span><span class="line">      <span class="p">}</span><span class="c1">//if </span>
</span><span class="line">
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="k">if</span><span class="p">(</span><span class="n">sum</span><span class="o">==</span><span class="n">i</span><span class="p">)</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">%d=&quot;</span><span class="p">,</span><span class="n">i</span><span class="p">);</span>
</span><span class="line">      <span class="k">for</span><span class="p">(</span><span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">k</span><span class="o">&lt;</span><span class="n">MAX</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="n">k</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">      <span class="p">{</span>
</span><span class="line">        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="n">temp</span><span class="p">[</span><span class="n">k</span><span class="p">]);</span>
</span><span class="line">        <span class="k">if</span><span class="p">(</span><span class="n">temp</span><span class="p">[</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span>
</span><span class="line">          <span class="k">break</span><span class="p">;</span>
</span><span class="line">        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;+&quot;</span><span class="p">);</span>
</span><span class="line">      <span class="p">}</span><span class="c1">//for </span>
</span><span class="line">      <span class="n">sum</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">      <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">m</span><span class="o">&lt;</span><span class="n">MAX</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="n">m</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">                                <span class="n">temp</span><span class="p">[</span><span class="n">m</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span><span class="c1">//if </span>
</span><span class="line">    <span class="k">else</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">      <span class="n">sum</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">}</span><span class="c1">//for </span>
</span><span class="line"><span class="p">}</span><span class="c1">//main </span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /></p>

<blockquote>
  <p>题目12：
输入高度，输出杨辉三角</p>
</blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">yang_triangle</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class="line">    <span class="n">a</span><span class="o">=[]</span>
</span><span class="line">    <span class="k">for</span> <span class="n">f</span> <span class="k">in</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line">        <span class="n">a</span><span class="o">[</span><span class="n">f</span><span class="o">]=[]</span>
</span><span class="line">        <span class="k">for</span> <span class="n">n</span> <span class="k">in</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.f</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line">            <span class="n">a</span><span class="o">[</span><span class="n">f</span><span class="o">][</span><span class="mi">0</span><span class="o">]=</span><span class="mi">1</span>
</span><span class="line">            <span class="k">if</span> <span class="n">f</span><span class="o">&gt;</span><span class="mi">1</span>
</span><span class="line">                <span class="k">for</span> <span class="n">m</span> <span class="k">in</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.n</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span>
</span><span class="line">                    <span class="n">a</span><span class="o">[</span><span class="n">f</span><span class="o">][</span><span class="n">m</span><span class="o">]=</span><span class="n">a</span><span class="o">[</span><span class="n">f</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="o">]+</span><span class="n">a</span><span class="o">[</span><span class="n">f</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">m</span><span class="o">]</span>
</span><span class="line">                <span class="k">end</span>
</span><span class="line">            <span class="k">end</span>
</span><span class="line">            <span class="n">a</span><span class="o">[</span><span class="n">f</span><span class="o">][</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">]=</span><span class="mi">1</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">    <span class="n">a</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line"><span class="nb">puts</span> <span class="s2">&quot;Input a number:&quot;</span>
</span><span class="line"><span class="n">n</span><span class="o">=</span><span class="nb">gets</span><span class="o">.</span><span class="n">chomp</span><span class="o">.</span><span class="n">to_i</span>
</span><span class="line"><span class="n">yang_triangle</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">arr</span><span class="o">|</span>
</span><span class="line">    <span class="n">arr</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">elem</span><span class="o">|</span>
</span><span class="line">        <span class="nb">print</span> <span class="n">elem</span><span class="p">,</span> <span class="s2">&quot; &quot;</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><br /></p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cp">#include &quot;stdio.h&quot; </span>
</span><span class="line"><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="kt">int</span> <span class="n">n</span><span class="p">;</span> <span class="c1">//杨辉三角的阶数 </span>
</span><span class="line">  <span class="kt">int</span> <span class="o">**</span><span class="n">c</span><span class="p">;</span>    <span class="c1">//存储杨辉三角的二维数组 </span>
</span><span class="line">  <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">;</span> <span class="c1">//二层循环变量 </span>
</span><span class="line">  <span class="kt">int</span> <span class="n">k</span><span class="p">;</span>
</span><span class="line">  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Please input the layer of yanghui:&quot;</span><span class="p">);</span>
</span><span class="line">  <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">n</span><span class="p">);</span>
</span><span class="line">  <span class="n">c</span><span class="o">=</span><span class="n">new</span> <span class="kt">int</span><span class="o">*</span> <span class="p">[</span><span class="n">n</span><span class="p">];</span>    <span class="c1">//动态分配二维空间 </span>
</span><span class="line">        <span class="k">for</span><span class="p">(</span><span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">k</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span><span class="n">k</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">    <span class="n">c</span><span class="p">[</span><span class="n">k</span><span class="p">]</span><span class="o">=</span><span class="n">new</span> <span class="kt">int</span><span class="p">[</span><span class="n">n</span><span class="p">];</span>
</span><span class="line">
</span><span class="line">  <span class="k">for</span><span class="p">(</span><span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">k</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span><span class="n">k</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">     <span class="p">{</span>
</span><span class="line">    <span class="n">c</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">         <span class="n">c</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">k</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">     <span class="p">}</span>
</span><span class="line">  <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">     <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">i</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">    <span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">=</span><span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">        <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>                 <span class="c1">//输出结果 </span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">i</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">)</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d &quot;</span><span class="p">,</span><span class="n">c</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我也来谈web service]]></title>
    <link href="http://irubi.github.io/blog/2008/12/18/wo-ye-lai-tan-web-service/"/>
    <updated>2008-12-18T11:59:00+08:00</updated>
    <id>http://irubi.github.io/blog/2008/12/18/wo-ye-lai-tan-web-service</id>
    <content type="html"><![CDATA[<p>最近在准备web service的一次讲课。是软件体系结构的一个章节。下面把我所领悟的东西做一个总结。希望朋友们能来一起探讨研究下。
<!--more--></p>

<h3 id="web-service">web service是什么？</h3>

<p>在说这个问题之前，我想首先要统一两个概念<code>programmable web</code>和<code>human web</code>。
<code>human web</code>可能是很多人对<code>web</code>的理解。做一个<code>web</code>项目就是为了让人来使用的，web应用里面的内容暂且放一边，对于结果的渲染就是返回html代码。
那么<code>programmable web</code>，顾名思义，就是在程序可用的的web应用，换句话说，就是web对外的接口不是html代码，而是另一种计算机可识别的代码，譬如XML。</p>

<p>那么它们是不是应该合二为一呢，对于一个web应用来说，无论是<code>programmable web</code>还是<code>human web</code>，只是观察的角度不同，接口不同。那么，最好的做法是将它们统一起来，如果是程序需要就给它返回XML代码，如果是浏览器需要就返回html，当然还可能返回其他格式的内容(譬如RSS)，那么如果要这样统一，统一点在哪呢？也就是说从什么角度看它们就是统一的呢？<code>web service</code>，既然是服务，就要服务的全面，到位，既要服务于人，又要服务于机器。</p>

<p>说清楚了这两个概念，那么来看看<code>web service</code>的定义：</p>

<p>引用W3C定义：</p>

<blockquote>
  <p>A Web service is a software system designed to support interoperable machine-to-machine interaction over a network. It has an interface described in a machine-processable format (specifically WSDL). Other systems interact with the Web service in a manner prescribed by its description using SOAP messages, typically conveyed using HTTP with an XML serialization in conjunction with other Web-related standards.</p>
</blockquote>

<p>这段话表达了3个意思：</p>

<ol>
  <li>web服务是用来支持机器对机器之间通过网络进行互操作的软件系统</li>
  <li>web服务的接口描述是有机器能够读懂的格式（WSDL：web service description language）</li>
  <li>在其他系统跟web服务交互时，这些系统要遵循web服务的接口描述来组织SOAP消息。通常情况下使用HTTP来传递XML格式的内容与其他的web相关标准相关联。</li>
</ol>

<h3 id="web-service-1">web service的逻辑分层</h3>

<p><img class="center" src="http://pic.yupoo.com/irubi_v/CRLGm386/UB4cY.png" /></p>

<p>从图中可以看到，<code>web service</code>分为了5层，分别是数据层、数据访问层、业务逻辑层、业务面和监听者，它们的功能在左边有相应的说明。</p>

<p>我觉得如此分层与MVC框架的建立有密切的联系，因为架构约束底层实现。
从上往下来看，对应的事件相当于外界（用户）对<code>web</code>应用发出<code>request</code>，需要<code>web</code>应用返回<code>response</code>。</p>

<p>监听者，是与外界（用户）离的最近的一层，这一层实现从外部用户得到所有请求需要的内容（譬如方法，参数等）。这一层也就相当于<code>V(view)</code></p>

<p>业务层， 将监听者得到的请求内容进行第一层加工。但是不进行具体的业务逻辑处理。相当于<code>C(controller)</code></p>

<p>数据访问层，业务逻辑层这二层，用来将物理数据转换为逻辑数据。这也就相当于是<code>M(model)</code>的功能。</p>

<p>数据层对应着数据库，这一层存放物理数据。</p>

<h3 id="web-service-2">从<code>web service</code>分类描述中寻求共性。</h3>

<p>角度不同，web service的分类也就不同，下面我摘抄一些对于web分类的说法：</p>

<ul>
  <li>
    <p>从功能的角度描述Web 服务,有一种观点认为Web 服务基于TCP/IP,HTTP,XML 等规范而定义,具备如下功能:<code>Web</code>上链接文档的浏览、事务的自动调用、服务的动态发现和发布.</p>
  </li>
  <li>
    <p>从组成框架及实现目标的角度描述Web 服务,认为<code>Web</code>服务作为一种网络操作,能够利用标准的Web 协议及接口进行应用间的交互.</p>
  </li>
  <li>
    <p>还有从语义的角度描述了基于语义Web 的服务,认为<code>Web</code> 服务是语义<code>Web</code>的一种应用,由于考虑了语义信息的描述及表示,<code>Web</code>服务能够更准确地被执行,服务组合(service composition)能够按所期望的目标进行.</p>
  </li>
  <li>
    <p>还有从网格计算<code>(grid computing)</code>的角度、信息检索的角度提出了很多web服务的描述。</p>
  </li>
  <li>
    <p>另外一方面,针对不同的应用背景: 面向企业应用(business-oriented) 的服务、面向消费者(consumer-oriented) 的服务、面向设备(device-oriented)的服务和面向系统(system-oriented)的服务</p>
  </li>
</ul>

<p>但共性是：</p>

<ul>
  <li>
    <p>应用的分布式.为适应网络应用中分布式的数据源和服务提供者,分布式的服务响应、松散耦合是Web 服务必须具备的特征.在应用中,服务请求者不必关心服务提供者的数据源格式是什么,某一服务请求需调用哪些服务,服务请求在Web 上怎样被执行等,即Web 服务对用户具有分布透明性. </p>
  </li>
  <li>
    <p>应用到应用的交互.在分布式的环境中,若采用集中控制方式,服务器有较大的负荷,并且系统不具有健壮性.因此应用到应用的交互,使得Web 服务更具可伸缩性. </p>
  </li>
  <li>
    <p>平台无关性.Web 服务的界面、跨Web 服务的事务、工作流、消息认证、安全机制均采用规范的协议和约定;由于Web 服务采用简单、易理解的标准
Web 协议作为组件接口和协同描述的规范,完全屏蔽了不同软件平台的差异,因此具有可集成能力。</p>
  </li>
  <li>
    <p>web服务的特点</p>
  </li>
</ul>

<p>对于外部使用者来说，<code>web service</code>是一个对象/组件。
它有5个特点:</p>

<ul>
  <li>完好的封装性：服务既然是一种部署在Web上的对象，自然具备对象的良好封装性，对于使用者而言，他能且仅能看到该对象提供的功能列表。    </li>
  <li>松散耦合：这一特征也是源于对象组件技术，当一个Web服务的实现发生变更的时候，调用者是不会感到这一点的，对于调用者来说，只要服务的调用界面不变，服务的实现任何变更对他们来说都是透明的。    </li>
  <li>使用协约的规范性：这一特征从对象而来，但相比一般对象其界面规范更加规范化和易于机器理解。    </li>
  <li>使用标准协议规范：作为Web服务，其所有公共的协约完全需要使用开放的标准协议进行描述、传输和交换。这些标准协议具有完全免费的规范，以便由任意方进行实现。    </li>
  <li>高度可集成能力：由于服务采取简单的、易理解的标准协议作为组件界面描述和协同描述规范，完全屏蔽了不同软件平台的差异，无论是CORBA、 DCOM还是EJB都可以通过这一种标准的协议进行互操作，实现了在当前环境下最高的可集成性。</li>
</ul>

<p>这些特点比较明显，就不再进行讲述了。</p>

<h3 id="web">web服务的模型：</h3>
<p><img class="center" src="http://pic.yupoo.com/irubi_v/CRLFw6Qm/f3rt5.png" /></p>

<p>可以看到这里有3个角色，3个动作，3个双向箭头，首先解释一下3个角色</p>

<p>服务提供者，也就是我们构建的web服务，可以对外提供某种服务，它首先要通过发布（可选）到服务代理，然后被服务请求者查找到，服务请求者从服务代理得到服务提供者的信息之后，和服务提供者绑定，从服务提供者那里得到需要的服务。</p>

<h3 id="web-1">web服务开发的生命周期</h3>

<p><img class="center" src="http://pic.yupoo.com/irubi_v/CRLGltRx/HAuBi.png" /></p>

<p>这个生命周期类似于软件开发的生命周期， 因为web开发也是一种软件开发的过程。</p>

<h3 id="web-2">web服务概念性协议栈</h3>

<p><img class="center" src="http://pic.yupoo.com/irubi_v/CRLGlsXc/4I5k9.png" /></p>

<ul>
  <li>发现服务层：是帮助客户端应用解析远程服务的位置，通过UDDI实现。</li>
  <li>描述服务层：为客户端提供服务端的服务描述，例如web服务能做什么，位置在哪，如何调用等</li>
  <li>消息格式层：保证客户端与服务端格式设置上保持一致，一般通过SOAP来实现。SOAP定义了C与S之间消息传输规范。SOAP用XML来格式化消息，HTTP来承载。SOAP包括3个部分，SOAP信封（定义了描述信息和如何处理消息的框架的封装）、表达应用程序定义的数据类型实例的编码规则（SOAP编码规则）以及RPC协议</li>
  <li>编码格式层：为C和S之间提供标准的，独立于平台的数据交换编码格式，一般为XML格式。</li>
  <li>传输协议层：为C与S之间提供交互的网络通信协议</li>
</ul>
]]></content>
  </entry>
  
</feed>
